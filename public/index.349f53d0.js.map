{"mappings":"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","sources":["src/js/jsItown/GUI/GuiTools.js"],"sourcesContent":["/**\n * Generated On: 2015-10-5\n * Class: GuiTools\n * Description: Classe pour cr√©er un menu.\n */\n\ndat.GUI.prototype.removeFolder = function removeFolder(name) {\n    var folder = this.__folders[name];\n    if (!folder) {\n        return;\n    }\n    folder.close();\n    this.__ul.removeChild(folder.domElement.parentNode);\n    delete this.__folders[name];\n    this.onResize();\n};\n\ndat.GUI.prototype.colorLayerFolder = function colorLayerFolder(name, value) {\n    var folder = this.__folders[name];\n    var title;\n    if (!folder) {\n        return;\n    }\n    title = folder.__ul.getElementsByClassName('title')[0];\n\n    if (title.style) {\n        title.style.background = value;\n    }\n};\n\ndat.GUI.prototype.hasFolder = function hasFolder(name) {\n    return this.__folders[name];\n};\n\nfunction GuiTools(domId, view, w) {\n    if (view) {\n        var width = w || 245;\n        var element = document.createElement('div');\n        element.id = 'menuDiv';\n        this.gui = new dat.GUI({ autoPlace: false, width: width });\n        element.appendChild(this.gui.domElement);\n        document.body.appendChild(element);\n        this.colorGui = this.gui.addFolder('Color Layers');\n        this.elevationGui = this.gui.addFolder('Elevation Layers');\n        this.geoidGui = this.gui.addFolder('Geoid Layers');\n        this.elevationGui.hide();\n        this.colorGui.hide();\n        this.geoidGui.hide();\n        this.view = view;\n        view.addEventListener('layers-order-changed', (function refreshColorGui() {\n            var i;\n            var colorLayers = view.getLayers(function filter(l) { return l.isColorLayer; });\n            for (i = 0; i < colorLayers.length; i++) {\n                this.removeLayersGUI(colorLayers[i].id);\n            }\n\n            this.addImageryLayersGUI(colorLayers);\n        }).bind(this));\n    }\n}\n\nGuiTools.prototype.addLayerGUI = function fnAddLayerGUI(layer) {\n    if (layer.isColorLayer) {\n        this.addImageryLayerGUI(layer);\n    } else if (layer.isElevationLayer) {\n        this.addElevationLayerGUI(layer);\n    } else if (layer.isGeoidLayer) {\n        this.addGeoidLayerGUI(layer);\n    }\n};\n\nGuiTools.prototype.addLayersGUI = function fnAddLayersGUI() {\n    function filterColor(l) { return l.isColorLayer; }\n    function filterElevation(l) { return l.isElevationLayer; }\n    this.addImageryLayersGUI(this.view.getLayers(filterColor));\n    this.addElevationLayersGUI(this.view.getLayers(filterElevation));\n    // eslint-disable-next-line no-console\n    console.info('menu initialized');\n};\n\nGuiTools.prototype.addImageryLayerGUI = function addImageryLayerGUI(layer) {\n    if (this.colorGui.hasFolder(layer.id)) { return; }\n    this.colorGui.show();\n    var folder = this.colorGui.addFolder(layer.id);\n    folder.add({ visible: layer.visible }, 'visible').onChange((function updateVisibility(value) {\n        layer.visible = value;\n        this.view.notifyChange(layer);\n    }).bind(this));\n    folder.add({ opacity: layer.opacity }, 'opacity', 0.0, 1.0, 0.01).onChange((function updateOpacity(value) {\n        layer.opacity = value;\n        this.view.notifyChange(layer);\n    }).bind(this));\n    folder.add({ frozen: layer.frozen }, 'frozen').onChange((function updateFrozen(value) {\n        layer.frozen = value;\n        this.view.notifyChange(layer);\n    }).bind(this));\n};\n\nGuiTools.prototype.addElevationLayerGUI = function addElevationLayerGUI(layer) {\n    if (this.elevationGui.hasFolder(layer.id)) { return; }\n    this.elevationGui.show();\n    var folder = this.elevationGui.addFolder(layer.id);\n    folder.add({ frozen: layer.frozen }, 'frozen').onChange(function refreshFrozenGui(value) {\n        layer.frozen = value;\n    });\n    folder.add({ scale: layer.scale }, 'scale').min(1.0).max(20000.0).onChange((function updateScale(value) {\n        layer.scale = value;\n        this.view.notifyChange(layer);\n    }).bind(this));\n};\n\nGuiTools.prototype.addGeoidLayerGUI = function addGeoidLayerGUI(layer) {\n    if (this.geoidGui.hasFolder(layer.id)) { return; }\n    this.geoidGui.show();\n    var folder = this.geoidGui.addFolder(layer.id);\n    folder.add({ frozen: layer.frozen }, 'frozen').onChange(function refreshFrozenGui(value) {\n        layer.frozen = value;\n    });\n    folder.add({ visible: layer.visible }, 'visible').onChange((function updateVisibility(value) {\n        layer.visible = value;\n        this.view.notifyChange(layer);\n    }).bind(this));\n};\n\nGuiTools.prototype.addImageryLayersGUI = function addImageryLayersGUI(layers) {\n    var i;\n    var seq = itowns.ImageryLayers.getColorLayersIdOrderedBySequence(layers);\n    var sortedLayers = layers.sort(function comp(a, b) {\n        return seq.indexOf(a.id) < seq.indexOf(b.id);\n    });\n    for (i = 0; i < sortedLayers.length; i++) {\n        this.addImageryLayerGUI(sortedLayers[i]);\n    }\n};\n\nGuiTools.prototype.addElevationLayersGUI = function addElevationLayersGUI(layers) {\n    var i;\n    for (i = 0; i < layers.length; i++) {\n        this.addElevationLayerGUI(layers[i]);\n    }\n};\n\nGuiTools.prototype.removeLayersGUI = function removeLayersGUI(nameLayer) {\n    this.colorGui.removeFolder(nameLayer);\n};\n\nGuiTools.prototype.addGUI = function addGUI(name, value, callback) {\n    this[name] = value;\n    return this.gui.add(this, name).onChange(callback);\n};\n\nGuiTools.prototype.colorLayerFolder = function colorLayerFolder(nameLayer, value) {\n    this.colorGui.colorLayerFolder(nameLayer, value);\n};\n\n// Recursive function that creates an HTML List from a javascript\n// object\n// eslint-disable-next-line no-unused-vars\nfunction createHTMLListFromObject(jsObject) {\n    var list = document.createElement('ul');\n    // Change the padding (top: 0, right:0, bottom:0 and left:1.5)\n    list.style.padding = '0 0 0 1.5rem';\n    // For each property of the object\n    Object.keys(jsObject).forEach(function _(property) {\n        // create item\n        var item = document.createElement('li');\n        // append property name\n        item.appendChild(document.createTextNode(property));\n\n        if (jsObject[property] === null) {\n            jsObject[property] = 'null';\n        }\n\n        if (typeof jsObject[property] === 'object') {\n            // if property value is an object, then recurse to\n            // create a list from it\n            // eslint-disable-next-line no-unused-vars\n            item.appendChild(createHTMLListFromObject(jsObject[property]));\n        } else {\n            // else append the value of the property to the item\n            item.appendChild(document.createTextNode(': '));\n            item.appendChild(\n                document.createTextNode(jsObject[property]));\n        }\n        list.appendChild(item);\n    });\n    return list;\n}\n"],"names":["GuiTools","domId","view","w","width","element","document","createElement","id","this","gui","dat","GUI","autoPlace","appendChild","domElement","body","colorGui","addFolder","elevationGui","geoidGui","hide","addEventListener","i","colorLayers","getLayers","l","isColorLayer","length","removeLayersGUI","addImageryLayersGUI","bind","createHTMLListFromObject","jsObject","list","style","padding","Object","keys","forEach","property","item","createTextNode","prototype","removeFolder","name","folder","__folders","close","__ul","removeChild","parentNode","onResize","colorLayerFolder","value","title","getElementsByClassName","background","hasFolder","addLayerGUI","layer","addImageryLayerGUI","isElevationLayer","addElevationLayerGUI","isGeoidLayer","addGeoidLayerGUI","addLayersGUI","addElevationLayersGUI","console","info","show","add","visible","onChange","notifyChange","opacity","frozen","scale","min","max","layers","seq","itowns","ImageryLayers","getColorLayersIdOrderedBySequence","sortedLayers","sort","a","b","indexOf","nameLayer","addGUI","callback"],"version":3,"file":"index.349f53d0.js.map"}