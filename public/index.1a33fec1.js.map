{"mappings":"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","sources":["node_modules/itowns/dist/webpack:/itowns/webpack/universalModuleDefinition","node_modules/itowns/dist/webpack:/itowns/src/Utils/gui/Widget.js","node_modules/itowns/dist/webpack:/itowns/src/Utils/gui/Navigation.js","node_modules/itowns/dist/webpack:/itowns/src/Utils/gui/Minimap.js","node_modules/itowns/dist/webpack:/itowns/src/Utils/gui/Scale.js","node_modules/itowns/dist/webpack:/itowns/src/Utils/gui/Searchbar.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"itowns_widgets\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"itowns_widgets\"] = factory();\n\telse\n\t\troot[\"itowns_widgets\"] = factory();\n})(self, () => {\nreturn ","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classPrivateFieldSet from \"@babel/runtime/helpers/classPrivateFieldSet\";\nimport _classPrivateFieldGet from \"@babel/runtime/helpers/classPrivateFieldGet\";\n\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\n\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\n\nvar _display = /*#__PURE__*/new WeakMap();\n\n/**\n * An interface that stores common methods for all specific widgets.\n *\n * @hideconstructor\n */\nvar Widget = /*#__PURE__*/function () {\n  function Widget(view) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var defaultOptions = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, Widget);\n\n    _classPrivateFieldInitSpec(this, _display, {\n      writable: true,\n      value: void 0\n    });\n\n    this.parentElement = options.parentElement || view.domElement;\n    this.position = options.position || defaultOptions.position;\n\n    if (!['top-left', 'top-right', 'bottom-left', 'bottom-right', 'top', 'bottom', 'left', 'right'].includes(this.position)) {\n      console.warn('\\'position\\' optional parameter for \\'Widget\\' constructor is not a valid option. ' + \"It will be set to '\".concat(defaultOptions.position, \"'.\"));\n      this.position = defaultOptions.position;\n    } // ---------- CREATE A DomElement WITH id, classes AND style RELEVANT TO THE WIDGET PROPERTIES : ----------\n    // Create a div containing minimap widget and add it to its specified parent.\n\n\n    this.domElement = document.createElement('div');\n    this.parentElement.appendChild(this.domElement); // Size widget according to options.\n\n    this.domElement.style.width = \"\".concat(options.width || options.size || defaultOptions.width, \"px\");\n    this.domElement.style.height = \"\".concat(options.height || options.size || defaultOptions.height, \"px\"); // Position widget according to options.\n\n    var positionArray = this.position.split('-');\n    this.domElement.classList.add(\"\".concat(positionArray[0], \"-widget\"));\n\n    if (positionArray[1]) {\n      this.domElement.classList.add(\"\".concat(positionArray[1], \"-widget\"));\n    } else {\n      // If only one position parameter was given, center the domElement on the other axis.\n      // TODO : at this stage, offsetWidth and offsetHeight do no include borders. This should be worked around.\n      switch (positionArray[0]) {\n        case 'top':\n        case 'bottom':\n          this.domElement.style.left = \"calc(50% - \".concat(this.domElement.offsetWidth / 2, \"px)\");\n          break;\n\n        case 'left':\n        case 'right':\n          this.domElement.style.top = \"calc(50% - \".concat(this.domElement.offsetHeight / 2, \"px)\");\n          break;\n\n        default:\n          break;\n      }\n    } // Translate widget div according to optional translate parameter.\n\n\n    if (options.translate) {\n      this.domElement.style.transform = \"translate(\".concat(options.translate.x || 0, \"px, \").concat(options.translate.y || 0, \"px)\");\n    } // Prevent triggering `GlobeControls` and `PlanarControls` mouse or pointer events when clicking the search bar.\n    // For example, this prevents triggering an animated travel when double-clicking search bar in a `GlobeView`.\n\n\n    this.domElement.addEventListener('pointerdown', function (e) {\n      e.stopPropagation();\n    });\n    this.domElement.addEventListener('mousedown', function (e) {\n      e.stopPropagation();\n    });\n  }\n  /**\n   * Change the widget style `display` property so that the widget becomes visible.\n   */\n\n\n  _createClass(Widget, [{\n    key: \"show\",\n    value: function show() {\n      this.domElement.style.display = _classPrivateFieldGet(this, _display);\n    }\n    /**\n     * Change the widget style `display` property so that the widget becomes invisible.\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      _classPrivateFieldSet(this, _display, window.getComputedStyle(this.domElement).display);\n\n      this.domElement.style.display = 'none';\n    }\n  }]);\n\n  return Widget;\n}();\n\nexport default Widget;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _classPrivateFieldSet from \"@babel/runtime/helpers/classPrivateFieldSet\";\nimport _classPrivateFieldGet from \"@babel/runtime/helpers/classPrivateFieldGet\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\n\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\n\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\n\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\n\nimport { VIEW_EVENTS } from \"../../Core/View\";\nimport Widget from \"./Widget\";\nvar DEFAULT_OPTIONS = {\n  displayCompass: true,\n  display3DToggle: true,\n  displayZoomIn: true,\n  displayZoomOut: true,\n  animationDuration: 500,\n  position: 'bottom-left',\n  direction: 'column'\n};\nvar DEFAULT_BUTTONS = {\n  compass: {\n    id: 'compass',\n    content: '',\n    info: 'Rotate the camera to face North',\n    parentId: 'widgets'\n  },\n  toggle3D: {\n    id: '3d-button',\n    content: '3D',\n    info: 'Tilt the camera'\n  },\n  zoomIn: {\n    id: 'zoom-in-button',\n    content: '<span class=\"widget-zoom-button-logo\"></span>',\n    info: 'Zoom in',\n    parentId: 'zoom-button-bar'\n  },\n  zoomOut: {\n    id: 'zoom-out-button',\n    content: '<span id=\"zoom-out-logo\" class=\"widget-zoom-button-logo\"></span>',\n    info: 'Zoom out',\n    parentId: 'zoom-button-bar'\n  }\n};\n/**\n * A widget menu manager for navigation.\n *\n * To use it, you need to link the widgets' stylesheet to your html webpage. This stylesheet is included in\n * [itowns bundles](https://github.com/iTowns/itowns/releases) if you downloaded them, or it can be found in\n * `node_modules/itowns/examples/css` if you installed iTowns with npm. Otherwise, it can be found at\n * [this link](https://raw.githubusercontent.com/iTowns/itowns/master/examples/css/widgets.css). See\n * [this example](http://www.itowns-project.org/itowns/examples/#widgets_navigation) for more details.\n *\n * @extends Widget\n *\n * @property {HTMLElement}          domElement      An html div containing all navigation widgets.\n * @property {HTMLElement}          parentElement   The parent HTML container of `this.domElement`.\n * @property {HTMLButtonElement}    compass         The HTML button for the compass.\n * @property {HTMLButtonElement}    toggle3D        The HTML button for the 3D/2D toggle button.\n * @property {HTMLButtonElement}    zoomIn          The HTML button for the zoom-in button.\n * @property {HTMLButtonElement}    zoomOut         The HTML button for the zoom-out button.\n *\n * @example\n * // Create a Navigation widget in the bottom-right corner of an iTowns view domElement\n * const navigation = new Navigation(view, { position: 'bottom-right' };\n *\n * // Change the tooltip for the compass :\n * navigation.compass.title = 'new tooltip';\n *\n * // Change the method ran when clicking zoom-in button :\n * function newMethod() {\n *     // do something\n * }\n * navigation.zoomIn.onclick = newMethod;\n */\n\nvar _view = /*#__PURE__*/new WeakMap();\n\nvar _action = /*#__PURE__*/new WeakSet();\n\nvar _addDefaultButton = /*#__PURE__*/new WeakSet();\n\nvar Navigation = /*#__PURE__*/function (_Widget) {\n  _inherits(Navigation, _Widget);\n\n  var _super = _createSuper(Navigation);\n\n  /**\n   * @param   {GlobeView}     view                                    The iTowns view the navigation should be linked\n                                                                      * to. For the moment, only `{@link GlobeView}`\n                                                                      * is supported.\n   * @param   {Object}        options                                 The navigation menu optional configuration.\n   * @param   {HTMLElement}   [options.parentElement=view.domElement] The parent HTML container of the div which\n                                                                      * contains navigation widgets.\n   * @param   {boolean}       [options.displayCompass=true]           Whether the compass widget should be displayed.\n   * @param   {boolean}       [options.display3DToggle=true]          Whether the navigation should include a widget\n                                                                      * to toggle between top and oblique view.\n   * @param   {boolean}       [options.displayZoomIn=true]            Whether the zoom-in widget should be displayed.\n   * @param   {boolean}       [options.displayZoomOut=true]           Whether the zoom-out widget should be displayed.\n   * @param   {number}        [options.animationDuration=500]         The duration of travel animations, when clicking\n                                                                      * navigation widgets.\n   * @param   {string}        [options.position='bottom-left']        Defines which corner of the `parentElement` the\n                                                                      * navigation menu should be displayed to.\n                                                                      * Possible values are `top-left`, `top-right`,\n                                                                      * `bottom-left` and `bottom-right`. If the input\n                                                                      * value does not match one of these, it will be\n                                                                      * defaulted to `bottom-left`.\n   * @param   {string}        [options.direction='column']            Whether the navigation menu should expand\n                                                                      * horizontally or vertically. Possible values\n                                                                      * are `column` and `row`. If the input value\n                                                                      * does not match one of these, it will be\n                                                                      * defaulted to `column`.\n   * @param   {Object}        [options.translate]                     An optional translation of the navigation menu.\n   * @param   {number}        [options.translate.x=0]                 The navigation menu translation along the page\n                                                                      * x-axis.\n   * @param   {number}        [options.translate.y=0]                 The navigation menu translation along the page\n                                                                      * y-axis.\n   */\n  function Navigation(view) {\n    var _options$displayCompa, _options$display3DTog, _options$displayZoomI, _options$displayZoomO;\n\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Navigation);\n\n    // ---------- BUILD PROPERTIES ACCORDING TO DEFAULT OPTIONS AND OPTIONS PASSED IN PARAMETERS : ----------\n    // Check if the view is supported.\n    if (!view.isGlobeView) {\n      throw new Error('\\'Navigation\\' plugin only supports \\'GlobeView\\'. Therefore, the \\'view\\' parameter must be a ' + '\\'GlobeView\\'.');\n    } // `top`, `bottom`, `left` and `right` values for `position` option are not relevant for navigation widget.\n\n\n    if (['top', 'bottom', 'left', 'right'].includes(options.position)) {\n      console.warn('\\'position\\' optional parameter for \\'Navigation\\' is not a valid option. ' + \"It will be set to '\".concat(DEFAULT_OPTIONS.position, \"'.\"));\n      options.position = DEFAULT_OPTIONS.position;\n    }\n\n    _this = _super.call(this, view, options, DEFAULT_OPTIONS);\n\n    _classPrivateMethodInitSpec(_assertThisInitialized(_this), _addDefaultButton);\n\n    _classPrivateMethodInitSpec(_assertThisInitialized(_this), _action);\n\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _view, {\n      writable: true,\n      value: void 0\n    });\n\n    _classPrivateFieldSet(_assertThisInitialized(_this), _view, view);\n\n    _this.direction = options.direction || DEFAULT_OPTIONS.direction;\n\n    if (!['column', 'row'].includes(_this.direction)) {\n      console.warn('\\'direction\\' optional parameter for \\'Navigation\\' constructor is not a valid option. ' + \"It will be set to '\".concat(DEFAULT_OPTIONS.direction, \"'.\"));\n      _this.direction = DEFAULT_OPTIONS.direction;\n    }\n\n    _this.animationDuration = options.animationDuration === undefined ? DEFAULT_OPTIONS.animationDuration : options.animationDuration; // ---------- CREATE A DomElement WITH id AND classes RELEVANT TO THE WIDGET PROPERTIES : ----------\n    // Create a div containing all widgets and add it to its specified parent.\n\n    _this.domElement.id = 'widgets-navigation'; // Position widget div according to options.\n\n    _this.domElement.classList.add(\"\".concat(_this.direction, \"-widget\")); // ---------- CREATE THE DEFAULT WIDGETS IF NOT HIDDEN (COMPASS, 3D AND ZOOM BUTTONS) : ----------\n    // Add a compass widget if requested.\n\n\n    if ((_options$displayCompa = options.displayCompass) !== null && _options$displayCompa !== void 0 ? _options$displayCompa : DEFAULT_OPTIONS.displayCompass) {\n      _this.compass = _classPrivateMethodGet(_assertThisInitialized(_this), _addDefaultButton, _addDefaultButton2).call(_assertThisInitialized(_this), DEFAULT_BUTTONS.compass, function () {\n        _classPrivateMethodGet(_assertThisInitialized(_this), _action, _action2).call(_assertThisInitialized(_this), {\n          heading: 0,\n          tilt: 89.5\n        });\n      }); // Manage compass rotation when the view's camera is moved.\n\n      view.addEventListener(VIEW_EVENTS.CAMERA_MOVED, function (event) {\n        _this.compass.style.transform = \"rotate(\".concat(-event.heading, \"deg)\");\n      });\n    } // Add a 3D toggle button if requested.\n\n\n    if ((_options$display3DTog = options.display3DToggle) !== null && _options$display3DTog !== void 0 ? _options$display3DTog : DEFAULT_OPTIONS.display3DToggle) {\n      _this.toggle3D = _classPrivateMethodGet(_assertThisInitialized(_this), _addDefaultButton, _addDefaultButton2).call(_assertThisInitialized(_this), DEFAULT_BUTTONS.toggle3D, function () {\n        _classPrivateMethodGet(_assertThisInitialized(_this), _action, _action2).call(_assertThisInitialized(_this), {\n          tilt: _classPrivateFieldGet(_assertThisInitialized(_this), _view).controls.getTilt() < 89 ? 89.5 : 40\n        });\n      }); // Manage button content toggle when the view's camera is moved.\n\n      view.addEventListener(VIEW_EVENTS.CAMERA_MOVED, function (event) {\n        _this.toggle3D.innerHTML = event.tilt < 89 ? '2D' : '3D';\n      });\n    } // Add a zoom-in button if requested.\n\n\n    if ((_options$displayZoomI = options.displayZoomIn) !== null && _options$displayZoomI !== void 0 ? _options$displayZoomI : DEFAULT_OPTIONS.displayZoomIn) {\n      _this.zoomIn = _classPrivateMethodGet(_assertThisInitialized(_this), _addDefaultButton, _addDefaultButton2).call(_assertThisInitialized(_this), DEFAULT_BUTTONS.zoomIn, function () {\n        _classPrivateMethodGet(_assertThisInitialized(_this), _action, _action2).call(_assertThisInitialized(_this), {\n          zoom: Math.min(20, _classPrivateFieldGet(_assertThisInitialized(_this), _view).controls.getZoom() + 1)\n        });\n      });\n    } // Add a zoom-out button if requested.\n\n\n    if ((_options$displayZoomO = options.displayZoomOut) !== null && _options$displayZoomO !== void 0 ? _options$displayZoomO : DEFAULT_OPTIONS.displayZoomOut) {\n      _this.zoomOut = _classPrivateMethodGet(_assertThisInitialized(_this), _addDefaultButton, _addDefaultButton2).call(_assertThisInitialized(_this), DEFAULT_BUTTONS.zoomOut, function () {\n        _classPrivateMethodGet(_assertThisInitialized(_this), _action, _action2).call(_assertThisInitialized(_this), {\n          zoom: Math.max(3, _classPrivateFieldGet(_assertThisInitialized(_this), _view).controls.getZoom() - 1)\n        });\n      });\n    }\n\n    return _this;\n  }\n  /**\n   *\n   * @param   {string}    id              The unique id the created button should be given.\n   * @param   {string}    [content='']    An HTML string defining the content of the button.\n   * @param   {string}    [title='']      An HTML string defining information on the button. This string will be\n                                          * displayed in a tooltip when hovering the button.\n   * @param   {function}  [onclick] The method that should be executed when the button is clicked on.\n   * @param   {string}    [parentId]      The unique id of a button bar in which the created button should be added.\n                                          * A button bar is a group which contains one or several buttons. All\n                                          * buttons created with Navigation are in a button bar. If the given id does\n                                          * not match an already existing button bar, a new button bar will be created\n                                          * with this id. If no id is given, a button bar will be created with no id.\n                                          * The later case can be useful for creating isolated buttons.\n   *\n   * @returns {HTMLButtonElement}     The created button.\n   */\n\n\n  _createClass(Navigation, [{\n    key: \"addButton\",\n    value: function addButton(id) {\n      var _this2 = this;\n\n      var content = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var title = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      var onclick = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n      var parentId = arguments.length > 4 ? arguments[4] : undefined;\n      var buttonBar = document.getElementById(parentId);\n\n      if (!buttonBar) {\n        buttonBar = this.addButtonBar(parentId);\n      }\n\n      var button = document.createElement('button');\n      button.className = 'widget-button';\n      button.id = id;\n      button.innerHTML = content;\n      button.title = title;\n      button.onclick = onclick;\n      buttonBar.appendChild(button); // The buttons must not be focused using tab key.\n\n      button.tabIndex = -1; // When releasing the mouse after clicking the button, we give the focus back to the view. Therefore, we can use\n      // key events on the view without having to click the view to grant it focus.\n\n      window.addEventListener('pointerup', function () {\n        if (document.activeElement === button) {\n          _classPrivateFieldGet(_this2, _view).domElement.focus();\n        }\n      });\n      return button;\n    }\n  }, {\n    key: \"addButtonBar\",\n    value: function addButtonBar(id) {\n      var buttonBar = document.createElement('div');\n      buttonBar.className = 'widget-button-bar';\n\n      if (id) {\n        buttonBar.id = id;\n      }\n\n      this.domElement.appendChild(buttonBar);\n      return buttonBar;\n    }\n  }]);\n\n  return Navigation;\n}(Widget);\n\nfunction _action2(params) {\n  params.time = this.animationDuration;\n  return _classPrivateFieldGet(this, _view).controls.lookAtCoordinate(params);\n}\n\nfunction _addDefaultButton2(settings, onclick) {\n  return this.addButton(settings.id, settings.content, settings.info, onclick, settings.parentId);\n}\n\nexport default Navigation;","import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Coordinates from \"../../Core/Geographic/Coordinates\";\nimport { MAIN_LOOP_EVENTS } from \"../../Core/MainLoop\";\nimport PlanarView from \"../../Core/Prefab/PlanarView\";\nimport { CAMERA_TYPE } from \"../../Renderer/Camera\";\nimport Widget from \"./Widget\";\nvar DEFAULT_OPTIONS = {\n  minScale: 1 / 500000,\n  maxScale: 1 / 5E8,\n  zoomRatio: 1 / 30,\n  width: 150,\n  height: 150,\n  position: 'bottom-left'\n};\n/**\n * A widget for minimap\n *\n * To use it, you need to link the widgets' stylesheet to your html webpage. This stylesheet is included in\n * [itowns bundles](https://github.com/iTowns/itowns/releases) if you downloaded them, or it can be found in\n * `node_modules/itowns/examples/css` if you installed iTowns with npm. Otherwise, it can be found at\n * [this link](https://raw.githubusercontent.com/iTowns/itowns/master/examples/css/widgets.css). See\n * [this example](http://www.itowns-project.org/itowns/examples/#widgets_minimap) for more details.\n *\n * @extends Widget\n *\n * @property    {HTMLElement}   domElement      An html div containing the minimap.\n * @property    {HTMLElement}   parentElement   The parent HTML container of `this.domElement`.\n */\n\nvar Minimap = /*#__PURE__*/function (_Widget) {\n  _inherits(Minimap, _Widget);\n\n  var _super = _createSuper(Minimap);\n\n  /**\n   * @param   {GlobeView}             view                                    The iTowns view the minimap should be\n                                                                              * linked to. Only {@link GlobeView} is\n                                                                              * supported at the moment.\n   * @param   {ColorLayer}            layer                                   The {@link ColorLayer} that should be\n                                                                              * displayed on the minimap.\n   * @param   {Object}                [options]                               The minimap optional configuration.\n   * @param   {HTMLElement}           [options.parentElement=view.domElement] The parent HTML container of the div\n                                                                              * which contains minimap widgets.\n   * @param   {number}                [options.size]                          The size of the minimap. It is a number\n                                                                              * that describes both width and height\n                                                                              * in pixels of the minimap.\n   * @param   {number}                [options.width=150]                     The width in pixels of the minimap.\n   * @param   {number}                [options.height=150]                    The height in pixels of the minimap.\n   * @param   {string}                [options.position='bottom-left']        Defines which position within the\n                                                                              * `parentElement` the minimap should be\n                                                                              * displayed to. Possible values are\n                                                                              * `top`, `bottom`, `left`, `right`,\n                                                                              * `top-left`, `top-right`, `bottom-left`\n                                                                              * and `bottom-right`. If the input value\n                                                                              * does not match one of these, it will\n                                                                              * be defaulted to `bottom-left`.\n   * @param   {Object}                [options.translate]                     An optional translation of the minimap.\n   * @param   {number}                [options.translate.x=0]                 The minimap translation along the page\n                                                                              * x-axis.\n   * @param   {number}                [options.translate.y=0]                 The minimap translation along the page\n                                                                              * y-axis.\n   * @param   {HTMLElement|string}    [options.cursor]                        An html element or an HTML string\n                                                                              * describing a cursor showing minimap\n                                                                              * view camera target position at the\n                                                                              * center of the minimap.\n   * @param   {number}                [options.minScale=1/2000]               The minimal scale the minimap can reach.\n   * @param   {number}                [options.maxScale=1/1_250_000]          The maximal scale the minimap can reach.\n   * @param   {number}                [options.zoomRatio=1/30]                The ratio between minimap camera zoom\n                                                                              * and view camera zoom.\n   * @param   {number}                [options.pitch=0.28]                    The screen pixel pitch, used to compute\n                                                                              * view and minimap scale.\n   */\n  function Minimap(view, layer) {\n    var _this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, Minimap);\n\n    // ---------- BUILD PROPERTIES ACCORDING TO DEFAULT OPTIONS AND OPTIONS PASSED IN PARAMETERS : ----------\n    if (!view.isGlobeView) {\n      throw new Error('\\'Minimap\\' plugin only supports \\'GlobeView\\'. Therefore, the \\'view\\' parameter must be a ' + '\\'GlobeView\\'.');\n    }\n\n    if (!layer.isColorLayer) {\n      throw new Error('\\'layer\\' parameter form \\'Minimap\\' constructor should be a \\'ColorLayer\\'.');\n    }\n\n    _this = _super.call(this, view, options, DEFAULT_OPTIONS);\n    _this.minScale = options.minScale || DEFAULT_OPTIONS.minScale;\n    _this.maxScale = options.maxScale || DEFAULT_OPTIONS.maxScale; // TODO : it could be interesting to be able to specify a method as zoomRatio parameter. This method could\n    //  return a zoom ratio from the scale of the minimap.\n\n    _this.zoomRatio = options.zoomRatio || DEFAULT_OPTIONS.zoomRatio; // ---------- this.domElement SETTINGS SPECIFIC TO MINIMAP : ----------\n\n    _this.domElement.id = 'widgets-minimap'; // Display a cursor at the center of the minimap, if requested.\n\n    if (options.cursor) {\n      // Wrap cursor domElement inside a div to center it in minimap.\n      var cursorWrapper = document.createElement('div');\n      cursorWrapper.id = 'cursor-wrapper';\n\n      _this.domElement.appendChild(cursorWrapper); // Add specified cursor to its wrapper.\n\n\n      if (typeof options.cursor === 'string') {\n        cursorWrapper.innerHTML = options.cursor;\n      } else if (options.cursor instanceof HTMLElement) {\n        cursorWrapper.appendChild(options.cursor);\n      }\n    } // ---------- CREATE A MINIMAP View AND DISPLAY DATA PASSED IN Layer PARAMETER : ----------\n\n\n    _this.view = new PlanarView(_this.domElement, layer.source.extent, {\n      camera: {\n        type: CAMERA_TYPE.ORTHOGRAPHIC\n      },\n      placement: layer.source.extent,\n      // TODO : the default placement should be the view extent for ortho camera\n      noControls: true,\n      maxSubdivisionLevel: view.tileLayer.maxSubdivisionLevel,\n      disableFocusOnStart: true\n    });\n\n    _this.view.addLayer(layer); // TODO : should this promise be returned by constructor so that user can use it ?\n    // Prevent the minimap domElement to get focus when clicked, and prevent click event to be propagated to the\n    // main view controls.\n\n\n    _this.domElement.addEventListener('pointerdown', function (event) {\n      event.preventDefault();\n    }); // Store minimap view camera3D in constant for code convenience.\n\n\n    var camera3D = _this.view.camera.camera3D; // ---------- UPDATE MINIMAP VIEW WHEN UPDATING THE MAIN VIEW : ----------\n    // The minimal and maximal value the minimap camera3D zoom can reach in order to stay in the scale limits.\n\n    var initialScale = _this.view.getScale(options.pitch);\n\n    var minZoom = camera3D.zoom * _this.maxScale / initialScale;\n    var maxZoom = camera3D.zoom * _this.minScale / initialScale; // Coordinates used to transform position vectors from the main view CRS to the minimap view CRS.\n\n    var mainViewCoordinates = new Coordinates(view.referenceCrs);\n    var viewCoordinates = new Coordinates(_this.view.referenceCrs);\n    var targetPosition = view.controls.getCameraTargetPosition();\n    view.addFrameRequester(MAIN_LOOP_EVENTS.AFTER_RENDER, function () {\n      // Update minimap camera zoom\n      var distance = view.camera.camera3D.position.distanceTo(targetPosition);\n      var scale = view.getScaleFromDistance(options.pitch, distance);\n      camera3D.zoom = _this.zoomRatio * maxZoom * scale / _this.minScale;\n      camera3D.zoom = Math.min(Math.max(camera3D.zoom, minZoom), maxZoom);\n      camera3D.updateProjectionMatrix(); // Update minimap camera position.\n\n      mainViewCoordinates.setFromVector3(view.controls.getCameraTargetPosition());\n      mainViewCoordinates.as(_this.view.referenceCrs, viewCoordinates);\n      camera3D.position.x = viewCoordinates.x;\n      camera3D.position.y = viewCoordinates.y;\n      camera3D.updateMatrixWorld(true);\n\n      _this.view.notifyChange(camera3D);\n    });\n    return _this;\n  }\n\n  return _createClass(Minimap);\n}(Widget);\n\nexport default Minimap;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { CONTROL_EVENTS } from \"../../Controls/GlobeControls\";\nimport { GLOBE_VIEW_EVENTS } from \"../../Core/Prefab/GlobeView\";\nimport { PLANAR_CONTROL_EVENT } from \"../../Controls/PlanarControls\";\nimport { VIEW_EVENTS } from \"../../Core/View\";\nimport Widget from \"./Widget\";\nvar DEFAULT_OPTIONS = {\n  width: 200,\n  height: 30,\n  position: 'bottom-left'\n};\n/**\n * A widget for scale\n *\n * To use it, you need to link the widgets' stylesheet to your html webpage. This stylesheet is included in\n * [itowns bundles](https://github.com/iTowns/itowns/releases) if you downloaded them, or it can be found in\n * `node_modules/itowns/examples/css` if you installed iTowns with npm. Otherwise, it can be found at\n * [this link](https://raw.githubusercontent.com/iTowns/itowns/master/examples/css/widgets.css). See\n * [this example](http://www.itowns-project.org/itowns/examples/#widgets_scale) for more details.\n *\n * @extends Widget\n *\n * @property    {HTMLElement}   domElement      An html div containing the scale.\n * @property    {HTMLElement}   parentElement   The parent HTML container of `this.domElement`.\n */\n\nvar Scale = /*#__PURE__*/function (_Widget) {\n  _inherits(Scale, _Widget);\n\n  var _super = _createSuper(Scale);\n\n  /**\n   * @param   {View}                  view                                    The iTowns view the scale should be\n                                                                              * linked to. If it is a\n                                                                              * {@link PlanarView} or a\n                                                                              * {@link GlobeView}, the scale will be\n                                                                              * automatically updated. Otherwise, user\n                                                                              * will need to implement the update\n                                                                              * automation using the `Scale.update`\n                                                                              * method.\n   * @param   {Object}                [options]                               The scale optional configuration.\n   * @param   {HTMLElement}           [options.parentElement=view.domElement] The parent HTML container of the div\n                                                                              * which contains scale widgets.\n   * @param   {number}                [options.width=200]                     The width in pixels of the scale.\n   * @param   {number}                [options.height=30]                     The height in pixels of the scale.\n   * @param   {string}                [options.position='bottom-left']        Defines which position within the\n                                                                              * `parentElement` the scale should be\n                                                                              * displayed to. Possible values are\n                                                                              * `top`, `bottom`, `left`, `right`,\n                                                                              * `top-left`, `top-right`, `bottom-left`\n                                                                              * and `bottom-right`. If the input value\n                                                                              * does not match one of these, it will\n                                                                              * be defaulted to `bottom-left`.\n   * @param   {Object}                [options.translate]                     An optional translation of the scale.\n   * @param   {number}                [options.translate.x=0]                 The scale translation along the page\n                                                                              * x-axis.\n   * @param   {number}                [options.translate.y=0]                 The scale translation along the page\n                                                                              * y-axis.\n   */\n  function Scale(view) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Scale);\n\n    // ---------- BUILD PROPERTIES ACCORDING TO DEFAULT OPTIONS AND OPTIONS PASSED IN PARAMETERS : ----------\n    _this = _super.call(this, view, options, DEFAULT_OPTIONS); // ---------- this.domElement SETTINGS SPECIFIC TO SCALE : ----------\n\n    _this.domElement.id = 'widgets-scale';\n    _this.view = view; // Initialize the text content of the scale, which will later be updated by a numerical value.\n\n    _this.domElement.innerHTML = 'Scale';\n    _this.width = options.width || DEFAULT_OPTIONS.width;\n\n    if (_this.view.isGlobeView) {\n      _this.view.addEventListener(GLOBE_VIEW_EVENTS.GLOBE_INITIALIZED, function () {\n        _this.update();\n      });\n\n      _this.view.controls.addEventListener(CONTROL_EVENTS.RANGE_CHANGED, function () {\n        _this.update();\n      });\n    } else if (_this.view.isPlanarView) {\n      _this.view.addEventListener(VIEW_EVENTS.INITIALIZED, function () {\n        _this.update();\n      });\n\n      _this.view.addEventListener(PLANAR_CONTROL_EVENT.MOVED, function () {\n        _this.update();\n      });\n    } else {\n      console.warn('The \\'view\\' linked to scale widget is neither a \\'GlobeView\\' nor a \\'PlanarView\\'. The ' + 'scale wont automatically update. You can implement its update automation using \\'Scale.update\\' ' + 'method.');\n    }\n\n    return _this;\n  }\n\n  _createClass(Scale, [{\n    key: \"addEventListeners\",\n    value: function addEventListeners() {}\n    /**\n     * Update the scale size and content according to view camera position.\n     */\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      // Calculate the rounded metric distance which matches the scale width in pixels.\n      var metricDistance = Math.round(this.view.getPixelsToMeters(this.width));\n      var digit = Math.pow(10, metricDistance.toString().length - 1);\n      metricDistance = Math.round(metricDistance / digit) * digit;\n      var pixelDistance = this.view.getMetersToPixels(metricDistance);\n      var unit = 'm';\n\n      if (metricDistance >= 1000) {\n        metricDistance /= 1000;\n        unit = 'km';\n      }\n\n      this.domElement.innerHTML = \"\".concat(metricDistance, \" \").concat(unit);\n      this.domElement.style.width = \"\".concat(pixelDistance, \"px\");\n    }\n  }]);\n\n  return Scale;\n}(Widget);\n\nexport default Scale;","import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _classPrivateFieldGet from \"@babel/runtime/helpers/classPrivateFieldGet\";\nimport _classPrivateFieldSet from \"@babel/runtime/helpers/classPrivateFieldSet\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\n\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\n\nimport Fetcher from \"../../Provider/Fetcher\";\nimport Widget from \"./Widget\";\nvar DEFAULT_OPTIONS = {\n  width: 300,\n  height: 38,\n  position: 'top',\n  maxSuggestionNumber: 10,\n  fontSize: 16,\n  placeholder: 'Search location'\n};\n\nfunction addActive(htmlElements, index) {\n  var _htmlElements$index;\n\n  if (!htmlElements) {\n    return index;\n  }\n\n  removeAllActives(htmlElements);\n\n  if (index >= htmlElements.length) {\n    index = 0;\n  } else if (index < 0) {\n    index = htmlElements.length - 1;\n  }\n\n  (_htmlElements$index = htmlElements[index]) === null || _htmlElements$index === void 0 ? void 0 : _htmlElements$index.classList.add('active');\n  return index;\n}\n\nfunction removeAllActives(htmlElements) {\n  for (var i = 0; i < htmlElements.length; i++) {\n    htmlElements[i].classList.remove('active');\n  }\n}\n\nfunction eraseSuggestionList(form) {\n  while (form.children.length > 1) {\n    form.removeChild(form.lastChild);\n  }\n}\n/**\n * A widget for searchbar\n *\n * To use it, you need to link the widgets' stylesheet to your html webpage. This stylesheet is included in\n * [itowns bundles](https://github.com/iTowns/itowns/releases) if you downloaded them, or it can be found in\n * `node_modules/itowns/examples/css` if you installed iTowns with npm. Otherwise, it can be found at\n * [this link](https://raw.githubusercontent.com/iTowns/itowns/master/examples/css/widgets.css). See\n * [this example](http://www.itowns-project.org/itowns/examples/#widgets_searchbar) for more details.\n *\n * @extends Widget\n *\n * @property    {HTMLElement}   domElement      An html div containing the searchbar.\n * @property    {HTMLElement}   parentElement   The parent HTML container of `this.domElement`.\n */\n\n\nvar _onSelected = /*#__PURE__*/new WeakMap();\n\nvar Searchbar = /*#__PURE__*/function (_Widget) {\n  _inherits(Searchbar, _Widget);\n\n  var _super = _createSuper(Searchbar);\n\n  /**\n   * @param   {View}          view                                    The iTowns view the searchbar should be linked\n                                                                      * to.\n   *\n   * @param   {Object}        geocodingOptions                        Configuration for geocoding.\n   * @param   {URL}           geocodingOptions.url                    The URL of a geocoding service that should be\n                                                                      * used to build suggestions.\n   * @param   {function}      geocodingOptions.parser                 A method to parse fetched results from geocoding\n                                                                      * url into a Map object. For each entry of this\n                                                                      * Map, the key must be a string that will be\n                                                                      * displayed as the html content of each\n                                                                      * suggestion bellow the searchbar. The value\n                                                                      * associated to the key is whatever the user\n                                                                      * wants. The value is the parameter that is\n                                                                      * passed to the `onSelected` method (specified\n                                                                      * in another `geocodingOptions` parameter).\n   * @param   {function}      [geocodingOptions.onSelected]           A method which describes what should be done\n                                                                      * when user selects a location (by clicking or\n                                                                      * hitting enter on a suggestion). The only\n                                                                      * parameter of this method is the value mapped\n                                                                      * with `geocodingOptions.parser` method.\n   *\n   * @param   {Object}        [options]                               The searchbar optional configuration.\n   * @param   {HTMLElement}   [options.parentElement=view.domElement] The parent HTML container of the div which\n                                                                      * contains searchbar widgets.\n   * @param   {number}        [options.size]                          The size of the searchbar. It is a number that\n                                                                      * describes both width and height in pixels of\n                                                                      * the searchbar.\n   * @param   {number}        [options.width=300]                     The width in pixels of the searchbar.\n   * @param   {number}        [options.height=38]                     The height in pixels of the searchbar.\n   * @param   {string}        [options.position='top']                Defines which position within the\n                                                                      * `parentElement` the searchbar should be\n                                                                      * displayed to. Possible values are `top`,\n                                                                      * `bottom`, `left`, `right`, `top-left`,\n                                                                      * `top-right`, `bottom-left` and `bottom-right`.\n                                                                      * If the input value does not match one of\n                                                                      * these, it will be defaulted to `top`.\n   * @param   {Object}        [options.translate]                     An optional translation of the searchbar.\n   * @param   {number}        [options.translate.x=0]                 The searchbar translation along the page x-axis.\n   * @param   {number}        [options.translate.y=0]                 The searchbar translation along the page y-axis.\n   * @param   {number}        [options.fontSize=16]                   The font size in pixel of the searchbar content.\n   * @param   {number}        [options.maxSuggestionNumber=10]        The maximum number of suggestions that should\n                                                                      * appear under the searchbar.\n   * @param   {string}        [options.placeholder='Search location'] The placeholder that appears in the searchbar\n                                                                      * when nothing has yet been typed.\n   */\n  function Searchbar(view, geocodingOptions) {\n    var _geocodingOptions$onS;\n\n    var _this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, Searchbar);\n\n    // ---------- BUILD PROPERTIES ACCORDING TO DEFAULT OPTIONS AND OPTIONS PASSED IN PARAMETERS : ----------\n    _this = _super.call(this, view, options, DEFAULT_OPTIONS); // Check if `geocodingOptions` parameter was correctly specified.\n\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _onSelected, {\n      writable: true,\n      value: void 0\n    });\n\n    if (!geocodingOptions || !geocodingOptions.url || !geocodingOptions.parser || typeof geocodingOptions.parser !== 'function') {\n      throw new Error('\\'geocodingOptions\\' parameter for \\'Searchbar\\' constructor is not a valid option. Please refer to ' + 'the documentation.');\n    }\n\n    _classPrivateFieldSet(_assertThisInitialized(_this), _onSelected, (_geocodingOptions$onS = geocodingOptions.onSelected) !== null && _geocodingOptions$onS !== void 0 ? _geocodingOptions$onS : function () {}); // ---------- this.domElement SETTINGS SPECIFIC TO SEARCHBAR : ----------\n\n\n    _this.domElement.id = 'widgets-searchbar';\n    _this.domElement.style.height = 'auto';\n    var form = document.createElement('form');\n    form.setAttribute('autocomplete', 'off');\n    form.id = 'searchbar-autocompletion-form';\n\n    _this.domElement.appendChild(form);\n\n    var input = document.createElement('input');\n    input.setAttribute('type', 'text');\n    input.setAttribute('name', 'mySearch');\n    input.setAttribute('placeholder', options.placeholder || DEFAULT_OPTIONS.placeholder);\n    input.style.height = \"\".concat(options.height || options.size || DEFAULT_OPTIONS.height, \"px\");\n    input.style.fontSize = \"\".concat(options.fontSize || DEFAULT_OPTIONS.fontSize, \"px\");\n    form.appendChild(input); // currentFocus variable stores the index of the suggestions that is focused by user, either with mouse or arrow\n    // keys.\n\n    var currentFocus; // ----------  BUILD AUTOCOMPLETION SUGGESTIONS LIST WHEN TYPING THE SEARCHBAR INPUT : ----------\n\n    input.addEventListener('input', function () {\n      var value = input.value; // Close any already opened list of autocompleted values\n\n      eraseSuggestionList(form);\n      currentFocus = -1;\n\n      if (!value) {\n        return false;\n      }\n\n      geocodingOptions.url.searchParams.set('text', value);\n      Fetcher.json(geocodingOptions.url).then(function (geocodingResult) {\n        var result = geocodingOptions.parser(geocodingResult);\n        var i = 0;\n        result.forEach(function (info, location) {\n          // Stop looping through the map if enough location have been proceeded.\n          if (i === Math.min(result.size, options.maxSuggestionNumber || DEFAULT_OPTIONS.maxSuggestionNumber)) {\n            return;\n          }\n\n          var mapIndex = i;\n          i++;\n          var index = location.toUpperCase().indexOf(value.toUpperCase());\n\n          if (index > -1) {\n            var autocompleteItem = document.createElement('div');\n            autocompleteItem.style.minHeight = input.style.height;\n            autocompleteItem.style.fontSize = \"\".concat(options.fontSize || DEFAULT_OPTIONS.fontSize, \"px\"); // Make the matching letters bold.\n\n            var start = location.slice(0, index);\n            var bold = location.slice(index, index + value.length);\n            var end = location.slice(index + value.length, location.length);\n            autocompleteItem.innerHTML = \"<p>\".concat(start, \"<strong>\").concat(bold, \"</strong>\").concat(end, \"</p>\"); // Store the current location value as an attribute of autocompleteItem div.\n\n            autocompleteItem.setAttribute('location', location);\n            form.appendChild(autocompleteItem); // eslint-disable-next-line no-loop-func\n\n            autocompleteItem.addEventListener('mouseover', function () {\n              removeAllActives(form.children);\n              currentFocus = mapIndex;\n              autocompleteItem.classList.add('active');\n            });\n            autocompleteItem.addEventListener('click', function () {\n              _classPrivateFieldGet(_assertThisInitialized(_this), _onSelected).call(_assertThisInitialized(_this), info);\n\n              input.value = autocompleteItem.getAttribute('location');\n              eraseSuggestionList(form);\n            });\n          }\n        });\n      });\n    }); // ---------- MANAGE KEYBOARD INTERACTIONS ON AUTOCOMPLETION SUGGESTIONS : ----------\n    // When searchbar is positioned at the bottom of the screen (therefore is a flex with `column-reverse`\n    // direction, we must exchange up and down arrow actions.\n\n    var topOrBottom = (options.position || DEFAULT_OPTIONS.position).includes('top') ? 1 : -1;\n    input.addEventListener('keydown', function (event) {\n      event.stopPropagation();\n      var completionSuggestions = form.getElementsByTagName('div');\n\n      switch (event.code) {\n        case 'Escape':\n          eraseSuggestionList(form);\n          input.value = '';\n          view.domElement.focus();\n          break;\n\n        case 'ArrowDown':\n          event.preventDefault();\n          currentFocus = addActive(completionSuggestions, currentFocus + topOrBottom);\n          break;\n\n        case 'ArrowUp':\n          event.preventDefault();\n          currentFocus = addActive(completionSuggestions, currentFocus - topOrBottom);\n          break;\n\n        case 'Enter':\n          event.preventDefault();\n\n          if (completionSuggestions[Math.max(currentFocus, 0)]) {\n            completionSuggestions[Math.max(currentFocus, 0)].click();\n            view.domElement.focus();\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    }); // ---------- MANAGE FOCUS AND ACTIVE SUGGESTION WHEN USER ENTERS OR LEAVES THE SEARCHBAR : ----------\n    // User clicks the searchbar.\n\n    input.addEventListener('focus', function () {\n      form.classList.add('focus');\n    }); // User clicks out of the searchbar.\n\n    input.addEventListener('blur', function () {\n      form.classList.remove('focus');\n      removeAllActives(form.children);\n    }); // Cursor leaves the searchbar.\n\n    form.addEventListener('mouseleave', function () {\n      removeAllActives(form.children);\n      currentFocus = -1;\n    });\n    return _this;\n  }\n\n  return _createClass(Searchbar);\n}(Widget);\n\nexport default Searchbar;"],"names":["root","factory","exports","module","define","amd","itowns_widgets","self","_display","WeakMap","f","Widget","view","options","arguments","length","defaultOptions","n","Z","this","obj","privateMap","value","privateCollection","has","TypeError","set","_classPrivateFieldInitSpec","writable","parentElement","domElement","position","includes","console","warn","concat","document","createElement","appendChild","style","width","size","height","positionArray","split","classList","add","left","offsetWidth","top","offsetHeight","translate","transform","x","y","addEventListener","e","stopPropagation","i","key","display","d","l","window","getComputedStyle","_classPrivateMethodInitSpec","privateSet","w","_classPrivateMethodGet","receiver","fn","DEFAULT_OPTIONS","displayCompass","display3DToggle","displayZoomIn","displayZoomOut","animationDuration","direction","DEFAULT_BUTTONS","id","content","info","parentId","_view","_action","WeakSet","_addDefaultButton","_action2","params","time","controls","lookAtCoordinate","_addDefaultButton2","settings","onclick","addButton","M","_Widget","r","Navigation","Derived","hasNativeReflectConstruct","_super","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","result","Super","s","NewTarget","constructor","apply","c","_options$displayCompa","_options$display3DTog","_options$displayZoomI","_options$displayZoomO","_this","isGlobeView","Error","a","v","compass","heading","tilt","u","b","CAMERA_MOVED","event","toggle3D","getTilt","innerHTML","zoomIn","zoom","Math","min","getZoom","zoomOut","max","_this2","title","buttonBar","getElementById","addButtonBar","button","className","tabIndex","activeElement","focus","A","minScale","maxScale","zoomRatio","P","Minimap","layer","isColorLayer","cursor","cursorWrapper","HTMLElement","PlanarView","source","extent","camera","type","I","ORTHOGRAPHIC","placement","noControls","maxSubdivisionLevel","tileLayer","disableFocusOnStart","addLayer","preventDefault","camera3D","initialScale","getScale","pitch","minZoom","maxZoom","mainViewCoordinates","Coordinates","referenceCrs","viewCoordinates","targetPosition","getCameraTargetPosition","addFrameRequester","D","Ao","AFTER_RENDER","distance","distanceTo","scale","getScaleFromDistance","updateProjectionMatrix","setFromVector3","as","updateMatrixWorld","notifyChange","V","G","Scale","O","GLOBE_INITIALIZED","update","B","Q","RANGE_CHANGED","isPlanarView","INITIALIZED","N","uZ","MOVED","metricDistance","round","getPixelsToMeters","digit","pow","toString","pixelDistance","getMetersToPixels","unit","W","maxSuggestionNumber","fontSize","placeholder","addActive","htmlElements","index","_htmlElements$index","removeAllActives","remove","eraseSuggestionList","form","children","removeChild","lastChild","_onSelected","Searchbar","geocodingOptions","_geocodingOptions$onS","j","url","parser","onSelected","setAttribute","currentFocus","input","searchParams","Fetcher","json","then","geocodingResult","forEach","location","mapIndex","toUpperCase","indexOf","autocompleteItem","minHeight","start","slice","bold","end","getAttribute","topOrBottom","completionSuggestions","getElementsByTagName","code","click","t"],"version":3,"file":"index.1a33fec1.js.map"}