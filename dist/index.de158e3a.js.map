{"mappings":"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","sources":["src/main.js"],"sourcesContent":["// https://github.com/iTowns/itowns/blob/master/examples/source_stream_wfs_3d.html\n\n\n// ----------------- Global variables ----------------- //\n\nlet meshes = [];\nlet linesBus = [];\nlet scaler;\n\n\n// ----------------- View Setup ----------------- //\n// Define crs projection that we will use (taken from https://epsg.io/3946, Proj4js section)\nitowns.proj4.defs('EPSG:3946', '+proj=lcc +lat_1=45.25 +lat_2=46.75 +lat_0=46 +lon_0=3 +x_0=1700000 +y_0=5200000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs');\n\n// Define initial camera position\nconst positionOnGlobe = { longitude: 0.71829, latitude: 45.18260, altitude: 3000 };\nconst placement = {\n    coord: new itowns.Coordinates('EPSG:4326', 0.71829, 45.18260),\n    range: 3000,\n    tilt: 30,\n}\n\nconst viewerDiv = document.getElementById('viewerDiv');\n\n// Instanciate iTowns GlobeView*\nconst view = new itowns.GlobeView(viewerDiv, placement);\nsetupLoadingScreen(viewerDiv, view);\n\n\n\n// ----------------- Layer Setup ----------------- //\n// Ortho Layer\nitowns.Fetcher.json('../data/layers/JSONLayers/Ortho.json').then(function _(config) {\n    config.source = new itowns.WMTSSource(config.source);\n    const layer = new itowns.ColorLayer('Ortho', config);\n    view.addLayer(layer).then(menuGlobe.addLayerGUI.bind(menuGlobe));\n});\n\n// Elevation layers\n// These will deform iTowns globe geometry to represent terrain elevation.\nfunction addElevationLayerFromConfig(config) {\n    config.source = new itowns.WMTSSource(config.source);\n    const layer = new itowns.ElevationLayer(config.id, config);\n    view.addLayer(layer).then(menuGlobe.addLayerGUI.bind(menuGlobe));\n}\nitowns.Fetcher.json('../data/layers/JSONLayers/WORLD_DTM.json').then(addElevationLayerFromConfig);\nitowns.Fetcher.json('../data/layers/JSONLayers/IGN_MNT_HIGHRES.json').then(addElevationLayerFromConfig);\n\nconst color = new itowns.THREE.Color();\n\nfunction colorBuildings(properties) {\n    if (properties.usage_1 === 'RÃ©sidentiel') {\n        return color.set(0xFDFDFF);\n    } else if (properties.usage_1 === 'Annexe') {\n        return color.set(0xC6C5B9);\n    } else if (properties.usage_1 === 'Commercial et services') {\n        return color.set(0x62929E);\n    } else if (properties.usage_1 === 'Religieux') {\n        return color.set(0x393D3F);\n    } else if (properties.usage_1 === 'Sportif') {\n        return color.set(0x546A7B);\n    }\n\n    return color.set(0x555555);\n}\n\nfunction altitudeBuildings(properties) {\n    return properties.altitude_minimale_sol;\n}\n\nfunction extrudeBuildings(properties) {\n    return properties.hauteur;\n}\n\nfunction acceptFeature(properties) {\n    return !!properties.hauteur;\n}\n\n// scaler = function update(/* dt */) {\n//     let i;\n//     let mesh;\n//     if (meshes.length) {\n//         view.notifyChange(view.camera.camera3D, true);\n//     }\n//     for (i = 0; i < meshes.length; i++) {\n//         mesh = meshes[i];\n//         if (mesh) {\n//             mesh.scale.z = Math.min(\n//                 1.0, mesh.scale.z + 0.1);\n//             mesh.updateMatrixWorld(true);\n//         }\n//     }\n//     meshes = meshes.filter(function filter(m) { return m.scale.z < 1; });\n// };\n\n// view.addFrameRequester(itowns.MAIN_LOOP_EVENTS.BEFORE_RENDER, scaler);\n\n// Buildings Layer\n// const wfsBuildingSource = new itowns.WFSSource({\n//     url: 'https://wxs.ign.fr/topographie/geoportail/wfs?',\n//     version: '2.0.0',\n//     typeName: 'BDTOPO_V3:batiment',\n//     crs: 'EPSG:4326',\n//     ipr: 'IGN',\n//     format: 'application/json',\n//     extent: {\n//         west: 0.67289,\n//         east: 0.74665,\n//         south: 45.17272,\n//         north: 45.2135,\n//     },\n// });\n\n// buildingLayer(serverURL, version, nameType, crs, ipr, zoomMinLayer, format, extent) {\nconst extent = {\n    west: 0.67289,\n    east: 0.74665,\n    south: 45.17272,\n    north: 45.2135,\n};\nconst wfsBuildingLayer = buildingLayer('https://wxs.ign.fr/topographie/geoportail/wfs?',\n    '2.0.0', 'BDTOPO_V3:batiment', 'EPSG:4326', 'IGN', 14, 'application/json', extent);\nview.addLayer(wfsBuildingLayer);\n\nconst menuGlobe = new GuiTools('menuDiv', view);\n// Listen for globe full initialisation event\nview.addEventListener(itowns.GLOBE_VIEW_EVENTS.GLOBE_INITIALIZED, function () {\n    // eslint-disable-next-line no-console\n    console.info('Globe initialized');\n});\n\ndebug.createTileDebugUI(menuGlobe.gui, view);\n\nfunction picking(event) {\n    if (view.controls.isPaused) {\n        const htmlInfo = document.getElementById('info');\n        const intersects = view.pickObjectsAt(event, 3, 'WFS Building');\n        let properties;\n        let info;\n        let batchId;\n\n        htmlInfo.innerHTML = ' ';\n\n        if (intersects.length) {\n            batchId = intersects[0].object.geometry.attributes.batchId.array[intersects[0].face.a];\n            properties = intersects[0].object.feature.geometries[batchId].properties;\n\n            Object.keys(properties).map(function (objectKey) {\n                const value = properties[objectKey];\n                if (value) {\n                    const key = objectKey.toString();\n                    if (key[0] !== '_' && key !== 'geometry_name') {\n                        info = value.toString();\n                        htmlInfo.innerHTML += '<li><b>' + key + ': </b>' + info + '</li>';\n                    }\n                }\n            });\n        }\n    }\n}\n\nfor (const layer of view.getLayers()) {\n\n    if (layer.id === 'WFS Building') {\n        layer.whenReady.then(function _(layer) {\n            const gui = debug.GeometryDebug.createGeometryDebugUI(menuGlobe.gui, view, layer);\n            debug.GeometryDebug.addWireFrameCheckbox(gui, view, layer);\n            window.addEventListener('mousemove', picking, false);\n        });\n    }\n\n}"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}