{"mappings":"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","sources":["node_modules/itowns/dist/debug.js","node_modules/itowns/dist/webpack:/itowns/webpack/universalModuleDefinition","node_modules/itowns/dist/webpack:/itowns/node_modules/chart.js/dist/chunks/helpers.segment.js","node_modules/itowns/dist/webpack:/itowns/node_modules/chart.js/dist/chart.esm.js","node_modules/itowns/dist/webpack:/itowns/utils/debug/charts/ChartConfig.js","node_modules/itowns/dist/webpack:/itowns/utils/debug/charts/ThreeStatsChart.js","node_modules/itowns/dist/webpack:/itowns/utils/debug/OBBHelper.js","node_modules/itowns/dist/webpack:/itowns/utils/debug/Debug.js","node_modules/itowns/dist/webpack:/itowns/utils/debug/PotreeDebug.js","node_modules/itowns/dist/webpack:/itowns/utils/debug/charts/TileObjectChart.js","node_modules/itowns/dist/webpack:/itowns/utils/debug/charts/TileVisibilityChart.js","node_modules/itowns/dist/webpack:/itowns/utils/debug/GeometryDebug.js","node_modules/itowns/dist/webpack:/itowns/utils/debug/TileDebug.js","node_modules/itowns/dist/webpack:/itowns/utils/debug/3dTilesDebug.js"],"sourcesContent":[null,"(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"debug\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"debug\"] = factory();\n\telse\n\t\troot[\"debug\"] = factory();\n})(self, () => {\nreturn ","/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _toLeftRightCenter as $, _rlookupByKey as A, getAngleFromPoint as B, toPadding as C, each as D, getMaximumSize as E, _getParentNode as F, readUsedSize as G, HALF_PI as H, throttled as I, supportsEventListenerOptions as J, _isDomSupported as K, log10 as L, _factorize as M, finiteOrDefault as N, callback as O, PI as P, _addGrace as Q, toDegrees as R, _measureText as S, TAU as T, _int16Range as U, _alignPixel as V, clipArea as W, renderText as X, unclipArea as Y, toFont as Z, _arrayUnique as _, resolve as a, _angleDiff as a$, _alignStartEnd as a0, overrides as a1, merge as a2, _capitalize as a3, descriptors as a4, isFunction as a5, _attachContext as a6, _createResolver as a7, _descriptors as a8, mergeIf as a9, restoreTextDirection as aA, noop as aB, distanceBetweenPoints as aC, _setMinAndMaxByKey as aD, niceNum as aE, almostWhole as aF, almostEquals as aG, _decimalPlaces as aH, _longestText as aI, _filterBetween as aJ, _lookup as aK, getHoverColor as aL, clone$1 as aM, _merger as aN, _mergerIf as aO, _deprecated as aP, toFontString as aQ, splineCurve as aR, splineCurveMonotone as aS, getStyle as aT, fontString as aU, toLineHeight as aV, PITAU as aW, INFINITY as aX, RAD_PER_DEG as aY, QUARTER_PI as aZ, TWO_THIRDS_PI as a_, uid as aa, debounce as ab, retinaScale as ac, clearCanvas as ad, setsEqual as ae, _elementsEqual as af, _isClickEvent as ag, _isBetween as ah, _readValueToProps as ai, _updateBezierControlPoints as aj, _computeSegments as ak, _boundSegments as al, _steppedInterpolation as am, _bezierInterpolation as an, _pointInLine as ao, _steppedLineTo as ap, _bezierCurveTo as aq, drawPoint as ar, addRoundedRectPath as as, toTRBL as at, toTRBLCorners as au, _boundSegment as av, _normalizeAngle as aw, getRtlAdapter as ax, overrideTextDirection as ay, _textX as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, getRelativePosition as y, _isPointInArea as z };\n","/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as getAngleFromPoint, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as _isDomSupported, L as log10, M as _factorize, N as finiteOrDefault, O as callback, Q as _addGrace, R as toDegrees, S as _measureText, U as _int16Range, V as _alignPixel, W as clipArea, X as renderText, Y as unclipArea, Z as toFont, $ as _toLeftRightCenter, a0 as _alignStartEnd, a1 as overrides, a2 as merge, a3 as _capitalize, a4 as descriptors, a5 as isFunction, a6 as _attachContext, a7 as _createResolver, a8 as _descriptors, a9 as mergeIf, aa as uid, ab as debounce, ac as retinaScale, ad as clearCanvas, ae as setsEqual, af as _elementsEqual, ag as _isClickEvent, ah as _isBetween, ai as _readValueToProps, aj as _updateBezierControlPoints, ak as _computeSegments, al as _boundSegments, am as _steppedInterpolation, an as _bezierInterpolation, ao as _pointInLine, ap as _steppedLineTo, aq as _bezierCurveTo, ar as drawPoint, as as addRoundedRectPath, at as toTRBL, au as toTRBLCorners, av as _boundSegment, aw as _normalizeAngle, ax as getRtlAdapter, ay as overrideTextDirection, az as _textX, aA as restoreTextDirection, aB as noop, aC as distanceBetweenPoints, aD as _setMinAndMaxByKey, aE as niceNum, aF as almostWhole, aG as almostEquals, aH as _decimalPlaces, aI as _longestText, aJ as _filterBetween, aK as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.7.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","import { Chart } from 'chart.js';\nChart.defaults.color = '#b0b0b0';\nexport var scales = {\n  y: {\n    display: true,\n    ticks: {\n      suggestedMin: 0 // minimum will be 0, unless there is a lower value.\n\n    },\n    gridLines: {\n      color: '#606060',\n      zeroLineColor: '#606060'\n    }\n  }\n};\nexport var color_rose = '#e7c9e5';\nexport var color_blue = '#64a6bd';\nexport var backgroundChartDiv = '#404040';\nexport default {};","import { Chart, LineController, LineElement, PointElement, LinearScale, CategoryScale, BarElement, BarController } from 'chart.js';\nimport { scales, color_rose, color_blue } from \"./ChartConfig\";\nChart.register(LineController, LineElement, PointElement, LinearScale, CategoryScale, BarElement, BarController);\nexport default function ThreeStatsChart(ctx, renderer) {\n  var lastValidCompareIndex = -1;\n  var timestamp = Date.now();\n  var textureDataset = {\n    label: 'texture count',\n    data: [{\n      x: 0,\n      y: 0\n    }],\n    borderColor: color_rose,\n    borderWidth: 1.5,\n    pointRadius: 1\n  };\n  var geometryDataset = {\n    label: 'geometry count',\n    data: [{\n      x: 0,\n      y: 0\n    }],\n    borderColor: color_blue,\n    borderWidth: 1.5,\n    pointRadius: 1\n  };\n  var label = ['0s'];\n  var chart = new Chart(ctx, {\n    type: 'line',\n    data: {\n      labels: label,\n      datasets: [textureDataset, geometryDataset]\n    },\n    options: {\n      animation: {\n        duration: 10\n      },\n      scales: scales\n    }\n  });\n\n  this.update = function (displayed) {\n    var limit = 60;\n    var timeInS = Math.floor((Date.now() - timestamp) / 1000);\n    var lbl = \"\".concat(timeInS, \"s\");\n    var identical = lastValidCompareIndex > 0 && label[lastValidCompareIndex] == lbl;\n\n    if (identical) {\n      label.push('');\n    } else {\n      label.push(lbl);\n      lastValidCompareIndex = label.length - 1;\n    }\n\n    if (label.length > limit) {\n      label.shift();\n      lastValidCompareIndex--;\n    }\n\n    var memory = renderer.info.memory;\n    textureDataset.data.push({\n      x: timeInS,\n      y: memory.textures\n    });\n    geometryDataset.data.push({\n      x: timeInS,\n      y: memory.geometries\n    });\n\n    if (textureDataset.data.length > limit) {\n      textureDataset.data.shift();\n      geometryDataset.data.shift();\n    }\n\n    if (displayed) {\n      chart.update();\n    }\n  };\n\n  this.resize = function () {\n    chart.resize();\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as THREE from 'three';\n\nvar OBBHelper = /*#__PURE__*/function (_THREE$Box3Helper) {\n  _inherits(OBBHelper, _THREE$Box3Helper);\n\n  var _super = _createSuper(OBBHelper);\n\n  function OBBHelper(OBB, text, color) {\n    var _this;\n\n    _classCallCheck(this, OBBHelper);\n\n    color = color || new THREE.Color(Math.random(), Math.random(), Math.random());\n    _this = _super.call(this, OBB.box3D, color.getHex());\n    _this.obb = OBB;\n    _this.material.linewidth = 2;\n    _this.frustumCulled = false;\n    _this.matrixAutoUpdate = false;\n    _this.rotationAutoUpdate = false;\n\n    _this.updateMatrixWorld(true);\n\n    return _this;\n  }\n\n  _createClass(OBBHelper, [{\n    key: \"removeChildren\",\n    value: function removeChildren() {\n      this.material.dispose();\n      this.geometry.dispose();\n    }\n  }, {\n    key: \"updateMatrixWorld\",\n    value: function updateMatrixWorld() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (this.obb.box3D.isEmpty()) {\n        return;\n      }\n\n      this.quaternion.copy(this.obb.quaternion);\n      this.obb.box3D.getCenter(this.position).applyQuaternion(this.quaternion).add(this.obb.position);\n      this.obb.box3D.getSize(this.scale);\n      this.scale.multiplyScalar(0.5);\n      this.updateMatrix();\n      THREE.Object3D.prototype.updateMatrixWorld.call(this, force);\n    }\n  }]);\n\n  return OBBHelper;\n}(THREE.Box3Helper);\n\nexport default OBBHelper;","function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { CameraHelper, Color, Vector3 } from 'three';\nimport Coordinates from \"../../src/Core/Geographic/Coordinates\";\nimport { MAIN_LOOP_EVENTS } from \"../../src/Core/MainLoop\";\nimport OBB from \"../../src/Renderer/OBB\";\nimport * as THREE from 'three';\nimport ThreeStatsChart from \"./charts/ThreeStatsChart\";\nimport { backgroundChartDiv, color_blue } from \"./charts/ChartConfig\";\nimport OBBHelper from \"./OBBHelper\";\n/**\n * Create a debug instance attached to an itowns instance\n *\n * @Constructor\n * @param {Scene} scene the itowns Scene\n * @return {Debug} a debug instance\n */\n// disabling eslint errors as it is the exported constructor\n\nfunction Debug(view, datDebugTool, chartDivContainer) {\n  var _this = this;\n\n  // CHARTS\n  // Create default charts div if missing\n  if (!chartDivContainer) {\n    chartDivContainer = document.createElement('div');\n    chartDivContainer.id = 'chart-div';\n    chartDivContainer.style.cssText = \"z-index: 10; position: absolute; bottom: 0; left: 0; width: 100vw; height: 30%; background-color: \".concat(backgroundChartDiv, \"; display: none\");\n    document.body.appendChild(chartDivContainer);\n  }\n\n  this.chartDivContainer = chartDivContainer;\n  var canvas = this.createChartContainer('three-info');\n  var ctx = canvas.getContext('2d');\n  this.charts = [];\n  this.charts.push(new ThreeStatsChart(ctx, view.mainLoop.gfxEngine.renderer));\n  var charts = this.charts;\n  var tileLayer = view.tileLayer;\n  var initialPosition = new Coordinates(view.referenceCrs, 0.0, 0.0, 0.0);\n  var geoPosition = new Coordinates('EPSG:4326', 0.0, 0.0, 0.0);\n\n  function debugChartUpdate(updateDuration) {\n    var displayed = chartDivContainer.style.display != 'none';\n    charts.forEach(function (c) {\n      return c.update(displayed, updateDuration);\n    });\n  } // DEBUG CONTROLS\n\n\n  var gui = datDebugTool.addFolder('Debug Tools');\n  var state = {\n    displayCharts: false,\n    eventsDebug: false,\n    debugCameraWindow: false,\n    freeze: false\n  };\n  var before;\n\n  var startChart = function startChart() {\n    before = Date.now();\n  };\n\n  var endChart = function endChart() {\n    var duration = Date.now() - before; // debug graphs update\n\n    debugChartUpdate(duration);\n  }; // charts\n\n\n  gui.add(state, 'displayCharts').name('Display charts').onChange(function (newValue) {\n    if (newValue) {\n      view.addFrameRequester(MAIN_LOOP_EVENTS.UPDATE_START, startChart);\n      view.addFrameRequester(MAIN_LOOP_EVENTS.UPDATE_END, endChart);\n      chartDivContainer.style.display = 'flex';\n    } else {\n      view.removeFrameRequester(MAIN_LOOP_EVENTS.UPDATE_START, startChart);\n      view.removeFrameRequester(MAIN_LOOP_EVENTS.UPDATE_END, endChart);\n      chartDivContainer.style.display = 'none';\n    }\n\n    _this.updateChartDivSize();\n\n    view.notifyChange();\n  });\n  gui.add(state, 'debugCameraWindow').name('debug Camera').onChange(function (value) {\n    if (value) {\n      view.addFrameRequester(MAIN_LOOP_EVENTS.AFTER_RENDER, renderCameraDebug);\n    } else {\n      view.removeFrameRequester(MAIN_LOOP_EVENTS.AFTER_RENDER, renderCameraDebug);\n    }\n\n    view.notifyChange();\n  });\n  gui.add(state, 'freeze').name('freeze update').onChange(function (newValue) {\n    tileLayer.frozen = newValue;\n    view.notifyChange();\n  }); // camera-target-updated event\n\n  var LatController;\n  var LongController;\n  var AltiController;\n  var eventFolder;\n  var controls = view.controls;\n  initialPosition.crs = view.referenceCrs;\n  var cursorWorldPosition = new THREE.Vector3();\n  var getCenter = controls && controls.getCameraTargetPosition ? controls.getCameraTargetPosition : function () {\n    return view.camera.camera3D.position;\n  };\n\n  var cameraTargetListener = function cameraTargetListener(event) {\n    if (view.getPickingPositionFromDepth(view.eventToViewCoords(event), cursorWorldPosition)) {\n      initialPosition.setFromVector3(cursorWorldPosition).as('EPSG:4326', geoPosition);\n      state.latitude = \"\".concat(geoPosition.y.toFixed(6));\n      state.longitude = \"\".concat(geoPosition.x.toFixed(6));\n      state.altitude = \"\".concat(geoPosition.z.toFixed(2));\n    } else {\n      state.latitude = '---------';\n      state.longitude = '---------';\n      state.altitude = '---------';\n    }\n\n    LatController.updateDisplay();\n    LongController.updateDisplay();\n    AltiController.updateDisplay();\n  };\n\n  gui.add(state, 'eventsDebug').name('Debug event').onChange(function () {\n    return function (newValue) {\n      if (newValue) {\n        eventFolder = gui.addFolder('Events');\n        eventFolder.open();\n        initialPosition.setFromVector3(getCenter()).as('EPSG:4326', geoPosition);\n        state.latitude = \"\".concat(geoPosition.y.toFixed(6));\n        state.longitude = \"\".concat(geoPosition.x.toFixed(6));\n        state.altitude = \"\".concat(geoPosition.z.toFixed(2));\n        LatController = eventFolder.add(state, 'latitude');\n        LongController = eventFolder.add(state, 'longitude');\n        AltiController = eventFolder.add(state, 'altitude');\n        view.domElement.addEventListener('mousemove', cameraTargetListener);\n      } else {\n        view.domElement.removeEventListener('mousemove', cameraTargetListener);\n        gui.removeFolder('Events');\n      }\n    };\n  }()); // Camera debug\n\n  var helper = new CameraHelper(view.camera.camera3D);\n  var debugCamera = view.camera.camera3D.clone();\n  debugCamera.fov *= 1.5;\n  debugCamera.updateProjectionMatrix();\n  var g = view.mainLoop.gfxEngine;\n  var r = g.renderer;\n  var fogDistance = 10e10;\n  var layerAtmosphere = view.getLayerById('atmosphere');\n\n  if (layerAtmosphere) {\n    fogDistance = layerAtmosphere.fog.distance;\n  }\n\n  helper.visible = false;\n  view.scene.add(helper); // Displayed tiles boundind box\n\n  var displayedTilesObb = new OBB();\n  var displayedTilesObbHelper = new OBBHelper(displayedTilesObb, '', new Color(color_blue));\n  displayedTilesObbHelper.visible = false;\n  view.scene.add(displayedTilesObb);\n  view.scene.add(displayedTilesObbHelper);\n\n  function updateFogDistance(obj) {\n    if (obj.material && fogDistance) {\n      obj.material.fogDistance = fogDistance;\n    }\n  }\n\n  var clearColor = new Color();\n  var lookAtCameraDebug = new Vector3();\n\n  function renderCameraDebug() {\n    if (state.debugCameraWindow && debugCamera) {\n      var ratio = 0.25;\n      var size = {\n        x: g.width * ratio,\n        y: g.height * ratio\n      };\n      debugCamera.aspect = size.x / size.y;\n      var camera = view.camera.camera3D;\n      var coord = new Coordinates(view.referenceCrs, camera.position).as(tileLayer.extent.crs);\n      var extent = view.tileLayer.info.displayed.extent;\n      displayedTilesObb.setFromExtent(extent);\n      displayedTilesObbHelper.visible = true;\n      displayedTilesObbHelper.updateMatrixWorld(true); // Note Method to compute near and far...\n      // const bbox = displayedTilesObb.box3D.clone().applyMatrix4(displayedTilesObb.matrixWorld);\n      // const distance = bbox.distanceToPoint(view.camera.camera3D.position);\n      // console.log('distance', distance, distance + bbox.getBoundingSphere(sphere).radius * 2);\n      // Compute position camera debug\n\n      var altitudeCameraDebug = 1.5 * coord.z;\n      coord.z = altitudeCameraDebug;\n      coord.as(view.referenceCrs).toVector3(debugCamera.position); // Compute recoil camera\n\n      camera.worldToLocal(debugCamera.position);\n      debugCamera.position.z += altitudeCameraDebug;\n      camera.localToWorld(debugCamera.position); // Compute target camera debug\n\n      lookAtCameraDebug.copy(view.camera.camera3D.position);\n      camera.worldToLocal(lookAtCameraDebug);\n      lookAtCameraDebug.z -= altitudeCameraDebug * 1.5;\n      camera.localToWorld(lookAtCameraDebug);\n      debugCamera.lookAt(lookAtCameraDebug);\n      helper.update();\n      debugCamera.updateProjectionMatrix();\n\n      if (layerAtmosphere) {\n        layerAtmosphere.object3d.visible = false;\n        fogDistance = 10e10;\n\n        var _iterator = _createForOfIteratorHelper(tileLayer.level0Nodes),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var obj = _step.value;\n            obj.traverseVisible(updateFogDistance);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      var deltaY = state.displayCharts ? Math.round(parseFloat(chartDivContainer.style.height.replace('%', '')) * g.height / 100) + 3 : 0;\n      helper.visible = true;\n      helper.updateMatrixWorld(true);\n      r.getClearColor(clearColor);\n      r.setViewport(g.width - size.x, deltaY, size.x, size.y);\n      r.setScissor(g.width - size.x, deltaY, size.x, size.y);\n      r.setScissorTest(true);\n      r.setClearColor(backgroundChartDiv);\n      r.clear();\n      r.render(view.scene, debugCamera);\n      r.setScissorTest(false);\n      r.setClearColor(clearColor);\n      r.setViewport(0, 0, g.width, g.height);\n      helper.visible = false;\n      displayedTilesObbHelper.visible = false;\n\n      if (layerAtmosphere) {\n        layerAtmosphere.object3d.visible = true;\n      }\n\n      if (layerAtmosphere) {\n        fogDistance = layerAtmosphere.fog.distance;\n\n        var _iterator2 = _createForOfIteratorHelper(tileLayer.level0Nodes),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _obj = _step2.value;\n\n            _obj.traverseVisible(updateFogDistance);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    }\n  }\n}\n\nDebug.prototype.createChartContainer = function createChartContainer(chartId) {\n  var div = document.createElement('div');\n  div.style.cssText = \"background-color: \".concat(backgroundChartDiv, \"; flex: auto;\");\n  this.chartDivContainer.appendChild(div);\n  var chartCanvas = document.createElement('canvas');\n  chartCanvas.height = '20rem';\n  chartCanvas.id = chartId;\n  div.appendChild(chartCanvas);\n  return chartCanvas;\n};\n\nDebug.prototype.updateChartDivSize = function updateChartDivSize() {\n  var count = 0;\n\n  var _iterator3 = _createForOfIteratorHelper(this.chartDivContainer.getElementsByTagName('div')),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var div = _step3.value;\n\n      if (div.style.display !== 'none') {\n        count++;\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  var size = Math.floor(100 / count);\n\n  var _iterator4 = _createForOfIteratorHelper(this.chartDivContainer.getElementsByTagName('div')),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var _div = _step4.value;\n\n      if (_div.style.display !== 'none') {\n        _div.style.width = \"\".concat(size, \"%\");\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  this.charts.forEach(function (c) {\n    c.resize();\n    c.update();\n  });\n};\n\nexport default Debug;","function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { MODE } from \"../../src/Renderer/PointsMaterial\";\nexport default {\n  initTools: function initTools(view, layer, datUi) {\n    var update = function () {\n      return view.notifyChange(layer, true);\n    };\n\n    layer.debugUI = datUi.addFolder(\"\".concat(layer.id));\n    layer.debugUI.add(layer, 'visible').name('Visible').onChange(update);\n    layer.debugUI.add(layer, 'sseThreshold').name('SSE threshold').onChange(update);\n    layer.debugUI.add(layer, 'octreeDepthLimit', -1, 20).name('Depth limit').onChange(update);\n    layer.debugUI.add(layer, 'pointBudget', 1, 15000000).name('Max point count').onChange(update);\n    layer.debugUI.add(layer.object3d.position, 'z', -50, 50).name('Z translation').onChange(function () {\n      layer.object3d.updateMatrixWorld();\n      view.notifyChange(layer);\n    });\n    layer.dbgStickyNode = '';\n    layer.dbgDisplaySticky = false;\n    layer.dbgDisplayChildren = true;\n    layer.dbgDisplayParents = true;\n    var styleUI = layer.debugUI.addFolder('Styling');\n\n    if (layer.material.mode != undefined) {\n      styleUI.add(layer.material, 'mode', MODE).name('Display mode').onChange(update);\n      styleUI.add(layer, 'maxIntensityRange', 0, 1).name('Intensity max').onChange(update);\n    }\n\n    styleUI.add(layer, 'opacity', 0, 1).name('Layer Opacity').onChange(update);\n    styleUI.add(layer, 'pointSize', 0, 15).name('Point Size').onChange(update);\n\n    if (layer.material.picking != undefined) {\n      styleUI.add(layer.material, 'picking').name('Display picking id').onChange(update);\n    } // UI\n\n\n    var debugUI = layer.debugUI.addFolder('Debug');\n    debugUI.add(layer.bboxes, 'visible').name('Display Bounding Boxes').onChange(update);\n    debugUI.add(layer, 'dbgStickyNode').name('Sticky node name').onChange(update);\n    debugUI.add(layer, 'dbgDisplaySticky').name('Display sticky node').onChange(update);\n    debugUI.add(layer, 'dbgDisplayChildren').name('Display children of sticky node').onChange(update);\n    debugUI.add(layer, 'dbgDisplayParents').name('Display parents of sticky node').onChange(update);\n\n    var isInHierarchy = function (name1, name2) {\n      return layer.dbgDisplaySticky && name1 === name2 || layer.dbgDisplayParents && name1.startsWith(name2) || layer.dbgDisplayChildren && name2.startsWith(name1);\n    };\n\n    view.addFrameRequester('before_layer_update', function () {\n      if (layer.dbgStickyNode.length) {\n        layer.displayedCount = 0;\n        var stickies = layer.dbgStickyNode.split(',');\n\n        var _iterator = _createForOfIteratorHelper(layer.group.children),\n            _step;\n\n        try {\n          var _loop = function _loop() {\n            var pts = _step.value;\n            pts.visible = stickies.some(function (name) {\n              return isInHierarchy(name, pts.owner.name);\n            });\n\n            if (pts.boxHelper) {\n              pts.boxHelper.visible = pts.visible;\n            }\n\n            if (pts.visible) {\n              layer.displayedCount += pts.geometry.attributes.position.count;\n            }\n          };\n\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            _loop();\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    });\n  }\n};","import { Chart } from 'chart.js';\nimport { scales, color_rose, color_blue } from \"./ChartConfig\";\nexport default function TileObjectsChart(ctx, tileLayer) {\n  var lastValidCompareIndex = 0;\n  var timestamp = Date.now();\n  var viewLevelStartDataset = {\n    label: 'Update 1st level',\n    data: [{\n      x: 0,\n      y: 0\n    }],\n    borderColor: color_rose,\n    borderWidth: 1.5,\n    pointRadius: 1\n  };\n  var viewUpdateDurationDataset = {\n    label: 'Update duration (ms)',\n    data: [{\n      x: 0,\n      y: 0\n    }],\n    borderColor: color_blue,\n    borderWidth: 1.5,\n    pointRadius: 1\n  };\n  var label = ['0s'];\n  var nbObjectsChart = new Chart(ctx, {\n    type: 'line',\n    data: {\n      labels: label,\n      datasets: [viewLevelStartDataset, viewUpdateDurationDataset]\n    },\n    options: {\n      animation: {\n        duration: 10\n      },\n      scales: scales\n    }\n  });\n\n  this.update = function (displayed, updateDuration) {\n    // update line graph\n    // update time\n    var limit = 60;\n    var timeInS = Math.floor((Date.now() - timestamp) / 1000);\n    var lbl = \"\".concat(timeInS, \"s\");\n    var identical = lastValidCompareIndex > 0 && label[lastValidCompareIndex] == lbl;\n\n    if (identical) {\n      label.push('');\n    } else {\n      label.push(lbl);\n      lastValidCompareIndex = label.length - 1;\n    }\n\n    if (label.length > limit) {\n      label.shift();\n      lastValidCompareIndex--;\n    }\n\n    viewLevelStartDataset.data.push({\n      x: 0,\n      y: tileLayer._latestUpdateStartingLevel\n    });\n    viewUpdateDurationDataset.data.push({\n      x: 0,\n      y: updateDuration\n    });\n\n    if (viewLevelStartDataset.data.length > limit) {\n      viewLevelStartDataset.data.shift();\n      viewUpdateDurationDataset.data.shift();\n    }\n\n    if (displayed) {\n      nbObjectsChart.update();\n    }\n  };\n\n  this.resize = function () {\n    nbObjectsChart.resize();\n  };\n}","function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { Chart } from 'chart.js';\nimport { scales, color_rose, color_blue } from \"./ChartConfig\";\nexport default function TileVisibilityChart(ctx, tileLayer) {\n  var nbVisibleLabels = [];\n  var nbVisibleData = [];\n  var nbDisplayedData = [];\n  var nbVisibleChart = new Chart(ctx, {\n    type: 'bar',\n    data: {\n      labels: nbVisibleLabels,\n      datasets: [{\n        label: 'Visible node per level',\n        data: nbVisibleData,\n        backgroundColor: color_rose\n      }, {\n        label: 'Diplayed node per level',\n        data: nbDisplayedData,\n        backgroundColor: color_blue\n      }]\n    },\n    options: {\n      scales: scales\n    }\n  });\n\n  this.update = function (displayed) {\n    function countVisible(node, stats) {\n      if (!node || !node.visible) {\n        return;\n      }\n\n      if (node.level >= 0 && node.layer === tileLayer) {\n        if (stats[node.level]) {\n          stats[node.level][0] += 1;\n        } else {\n          stats[node.level] = [1, 0];\n        }\n\n        if (node.material.visible) {\n          stats[node.level][1] += 1;\n        }\n      }\n\n      if (node.children) {\n        var _iterator = _createForOfIteratorHelper(node.children),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var child = _step.value;\n            countVisible(child, stats);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    } // update bar graph\n\n\n    var stats = {};\n    countVisible(tileLayer.object3d, stats);\n    nbVisibleLabels.length = 0;\n    nbVisibleData.length = 0;\n\n    for (var level in stats) {\n      if ({}.hasOwnProperty.call(stats, level)) {\n        nbVisibleLabels[level] = \"\".concat(level);\n        nbVisibleData[level] = stats[level][0];\n        nbDisplayedData[level] = stats[level][1];\n      }\n    }\n\n    if (displayed) {\n      nbVisibleChart.update();\n    }\n  };\n\n  this.resize = function () {\n    nbVisibleChart.resize();\n  };\n}","// TODO: move to GeometryLayer\nfunction addMaterialLayerProperty(layer, key, value) {\n  layer.defineLayerProperty(key, value, function () {\n    var root = layer.parent ? layer.parent.object3d : layer.object3d;\n    root.traverse(function (object) {\n      if (object.layer == layer && object.material) {\n        object.material[key] = layer[key];\n      } else if (object.content && object.content.layer == layer) {\n        object.content.traverse(function (o) {\n          if (o.material) {\n            o.material[key] = layer[key];\n          }\n        });\n      }\n    });\n  });\n}\n\nexport default {\n  addWireFrameCheckbox: function addWireFrameCheckbox(gui, view, layer) {\n    gui.add(layer, 'wireframe').name('Wireframe').onChange(function () {\n      return view.notifyChange(layer);\n    });\n  },\n  addMaterialSize: function addMaterialSize(gui, view, layer, begin, end) {\n    addMaterialLayerProperty(layer, 'size', 1);\n    gui.add(layer, 'size', begin, end).name('Size').onChange(function () {\n      return view.notifyChange(layer);\n    });\n  },\n  addMaterialLineWidth: function addMaterialLineWidth(gui, view, layer, begin, end) {\n    addMaterialLayerProperty(layer, 'linewidth', 1);\n    gui.add(layer, 'linewidth', begin, end).name('Line Width').onChange(function () {\n      return view.notifyChange(layer);\n    });\n  },\n  createGeometryDebugUI: function createGeometryDebugUI(datDebugTool, view, layer) {\n    var gui = datDebugTool.addFolder(\"Layer \".concat(layer.id));\n    gui.add(layer, 'visible').name('Visible').onChange(function () {\n      return view.notifyChange(layer);\n    });\n    gui.add(layer, 'opacity', 0, 1).name('Opacity').onChange(function () {\n      return view.notifyChange(layer);\n    });\n    return gui;\n  }\n};","function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport * as THREE from 'three';\nimport TWEEN from '@tweenjs/tween.js';\nimport View from \"../../src/Core/View\";\nimport GeometryLayer from \"../../src/Layer/GeometryLayer\";\nimport { MAIN_LOOP_EVENTS } from \"../../src/Core/MainLoop\";\nimport ObjectRemovalHelper from \"../../src/Process/ObjectRemovalHelper\";\nimport TileObjectChart from \"./charts/TileObjectChart\";\nimport TileVisibilityChart from \"./charts/TileVisibilityChart\";\nimport GeometryDebug from \"./GeometryDebug\";\nimport Debug from \"./Debug\";\nimport OBBHelper from \"./OBBHelper\";\n\nfunction applyToNodeFirstMaterial(view, root, layer, cb) {\n  root.traverse(function (object) {\n    if (object.material && object.layer === layer) {\n      cb(object.material);\n    }\n  });\n  view.notifyChange();\n}\n\nvar selectedNode;\n/**\n * Select tile\n *\n * @param      {View} view\n * @param      {Object} mouseOrEvt - mouse position in window coordinates (0, 0 = top-left)\n * or MouseEvent or TouchEvent.\n * @param      {boolean}  [showInfo=true] Show tile information in console.\n * @return     {TileMesh} Selected tile.\n */\n\nfunction selectTileAt(view, mouseOrEvt) {\n  var showInfo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (selectedNode) {\n    selectedNode.material.overlayAlpha = 0;\n    selectedNode.material.showOutline = view.tileLayer.showOutline;\n    view.notifyChange(selectedNode);\n  }\n\n  var picked = view.tileLayer.pickObjectsAt(view, mouseOrEvt);\n  selectedNode = picked.length ? picked[0].object : undefined;\n\n  if (selectedNode) {\n    if (showInfo) {\n      // eslint-disable-next-line no-console\n      console.info(selectedNode);\n    }\n\n    selectedNode.material.overlayAlpha = 0.5;\n    selectedNode.material.showOutline = true;\n    view.notifyChange(selectedNode);\n  }\n\n  return selectedNode;\n}\n\nexport default function createTileDebugUI(datDebugTool, view, layer, debugInstance) {\n  var force = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  if (!view.isDebugMode && !force) {\n    return;\n  }\n\n  debugInstance = debugInstance || new Debug(view, datDebugTool);\n  layer = layer || view.tileLayer;\n  var gui = GeometryDebug.createGeometryDebugUI(datDebugTool, view, layer);\n  var objectChardId = \"\".concat(layer.id, \"-nb-objects\");\n  var canvasObjectChardId = debugInstance.createChartContainer(objectChardId);\n  var visibleChardId = \"\".concat(layer.id, \"-nb-visible\");\n  var canvasVisibleChardId = debugInstance.createChartContainer(visibleChardId);\n  debugInstance.charts.push(new TileObjectChart(canvasObjectChardId.getContext('2d'), layer));\n  debugInstance.charts.push(new TileVisibilityChart(canvasVisibleChardId.getContext('2d'), layer));\n  layer.showOutline = false;\n  layer.wireframe = false;\n  var state = {\n    objectChart: true,\n    visibilityChart: true,\n    sseHelper: false\n  }; // tiles outline\n\n  gui.add(layer, 'showOutline').name('Show tiles').onChange(function (newValue) {\n    layer.showOutline = newValue;\n    applyToNodeFirstMaterial(view, layer.object3d, layer, function (material) {\n      material.showOutline = newValue;\n    });\n  }); // tiles wireframe\n\n  gui.add(layer, 'wireframe').name('Wireframe').onChange(function () {\n    view.notifyChange(layer);\n  }); // TileObjectChart visibility\n\n  gui.add(state, 'objectChart').name('Object chart').onChange(function (newValue) {\n    if (newValue) {\n      document.getElementById(objectChardId).parentNode.style.display = 'block';\n    } else {\n      document.getElementById(objectChardId).parentNode.style.display = 'none';\n    }\n\n    debugInstance.updateChartDivSize();\n    debugInstance.charts.forEach(function (c) {\n      return c.update();\n    });\n  }); // TileVisibilityChart visibility\n\n  gui.add(state, 'visibilityChart').name('Visibility chart').onChange(function (newValue) {\n    if (newValue) {\n      document.getElementById(visibleChardId).parentNode.style.display = 'block';\n    } else {\n      document.getElementById(visibleChardId).parentNode.style.display = 'none';\n    }\n\n    debugInstance.updateChartDivSize();\n    debugInstance.charts.forEach(function (c) {\n      return c.update();\n    });\n  }); // Bounding box control\n\n  var obb_layer_id = \"\".concat(layer.id, \"_obb_debug\");\n  var sb_layer_id = \"\".concat(layer.id, \"_sb_debug\");\n  var geometrySphere = new THREE.SphereGeometry(1, 16, 16);\n\n  function debugIdUpdate(context, layer, node) {\n    var enabled = context.camera.camera3D.layers.test({\n      mask: 1 << layer.threejsLayer\n    });\n\n    if (!node.parent || !enabled) {\n      ObjectRemovalHelper.removeChildrenAndCleanupRecursively(layer, node);\n      return;\n    }\n\n    var helper = node.children.filter(function (n) {\n      return n.layer && n.layer.id == layer.id;\n    })[0];\n\n    if (node.material && node.material.visible) {\n      if (!helper) {\n        // add the ability to hide all the debug obj for one layer at once\n        var l = context.view.getLayerById(layer.id);\n        var l3js = l.threejsLayer;\n\n        if (layer.id == obb_layer_id) {\n          helper = new OBBHelper(node.obb);\n\n          if (helper.children[0]) {\n            helper.children[0].layers.set(l3js);\n          }\n        } else if (layer.id == sb_layer_id) {\n          var color = new THREE.Color(Math.random(), Math.random(), Math.random());\n          var material = new THREE.MeshBasicMaterial({\n            color: color.getHex(),\n            wireframe: true\n          });\n          helper = new THREE.Mesh(geometrySphere, material);\n          helper.position.copy(node.boundingSphere.center);\n          helper.scale.multiplyScalar(node.boundingSphere.radius);\n        }\n\n        helper.layers.set(l3js);\n        helper.layer = layer;\n        node.add(helper);\n        helper.updateMatrixWorld(true); // if we don't do that, our OBBHelper will never get removed,\n        // because once a node is invisible, children are not removed\n        // any more\n\n        var hiddenHandler = node.material.addEventListener('hidden', function () {\n          node.material.removeEventListener(hiddenHandler);\n          var i = node.children.length;\n\n          while (i--) {\n            var c = node.children[i];\n\n            if (c.layer === sb_layer_id) {\n              if (c.dispose) {\n                c.dispose();\n              } else if (Array.isArray(c.material)) {\n                var _iterator = _createForOfIteratorHelper(c.material),\n                    _step;\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    var _material = _step.value;\n\n                    _material.dispose();\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n              } else {\n                c.material.dispose();\n              }\n\n              node.children.splice(i, 1);\n            }\n          }\n        });\n      }\n\n      if (layer.id == sb_layer_id) {\n        helper.position.copy(node.boundingSphere.center);\n        helper.scale.set(1, 1, 1).multiplyScalar(node.boundingSphere.radius);\n      }\n\n      helper.updateMatrixWorld(true);\n      helper.visible = true;\n    } else if (helper) {\n      helper.visible = false;\n    }\n  }\n\n  var obbLayer = new GeometryLayer(obb_layer_id, new THREE.Object3D(), {\n    update: debugIdUpdate,\n    visible: false,\n    cacheLifeTime: Infinity,\n    source: false\n  });\n  View.prototype.addLayer.call(view, obbLayer, layer).then(function (l) {\n    gui.add(l, 'visible').name('Bounding boxes').onChange(function () {\n      view.notifyChange(l);\n    });\n  });\n  var sbLayer = new GeometryLayer(sb_layer_id, new THREE.Object3D(), {\n    update: debugIdUpdate,\n    visible: false,\n    cacheLifeTime: Infinity,\n    source: false\n  });\n  View.prototype.addLayer.call(view, sbLayer, layer).then(function (l) {\n    gui.add(l, 'visible').name('Bounding Spheres').onChange(function () {\n      view.notifyChange(l);\n    });\n  });\n  var viewerDiv = document.getElementById('viewerDiv');\n  var circle = document.createElement('span');\n  circle.className = 'circleBase';\n  viewerDiv.appendChild(circle);\n  var centerNode = new THREE.Vector3();\n  var actualNode;\n\n  var animationFrameRequester = function () {\n    TWEEN.update();\n    view.notifyChange();\n  };\n\n  var removeAnimationRequester = function () {\n    TWEEN.removeAll();\n\n    if (view._frameRequesters[MAIN_LOOP_EVENTS.BEFORE_RENDER].includes(animationFrameRequester)) {\n      view.removeFrameRequester(MAIN_LOOP_EVENTS.BEFORE_RENDER, animationFrameRequester);\n    }\n  };\n\n  function picking(event) {\n    var selectNode = selectTileAt(view, event, false);\n\n    if (selectNode) {\n      circle.style.display = 'table-cell';\n      centerNode.copy(selectNode.boundingSphere.center).applyMatrix4(selectNode.matrixWorld);\n      var project = centerNode.project(view.camera.camera3D);\n      var coords = view.normalizedToViewCoords(project);\n      var size = selectNode.screenSize;\n\n      if (actualNode != selectNode) {\n        var actualSize = Number(circle.style.width.replace('px', ''));\n        actualNode = selectNode;\n        removeAnimationRequester();\n        new TWEEN.Tween({\n          size: actualSize\n        }).to({\n          size: size\n        }, 500).easing(TWEEN.Easing.Sinusoidal.In).easing(TWEEN.Easing.Exponential.Out).onUpdate(function (object) {\n          circle.style['line-height'] = \"\".concat(object.size, \"px\");\n          circle.style.width = \"\".concat(object.size, \"px\");\n          circle.style.height = \"\".concat(object.size, \"px\");\n          circle.innerHTML = \"\".concat(Math.floor(object.size), \" px\");\n          circle.style.left = \"\".concat(coords.x - object.size * 0.5, \"px\");\n          circle.style.top = \"\".concat(coords.y - object.size * 0.5, \"px\");\n        }).onComplete(removeAnimationRequester).start();\n        view.addFrameRequester(MAIN_LOOP_EVENTS.BEFORE_RENDER, animationFrameRequester);\n      }\n    } else {\n      circle.style.display = 'none';\n    }\n  }\n\n  gui.add(state, 'sseHelper').name('Sse helper').onChange(function (v) {\n    if (v) {\n      window.addEventListener('mousemove', picking, false);\n    } else {\n      circle.style.display = 'none';\n      removeAnimationRequester();\n      window.removeEventListener('mousemove', picking);\n    }\n  });\n  var currKey = null;\n  window.addEventListener('mousedown', function (event) {\n    if (currKey == 83) {\n      selectTileAt(view, event);\n    }\n  });\n  window.addEventListener('keydown', function (event) {\n    currKey = event.which;\n  });\n  window.addEventListener('keyup', function () {\n    currKey = null;\n  });\n}","import * as THREE from 'three';\nimport View from \"../../src/Core/View\";\nimport GeometryLayer from \"../../src/Layer/GeometryLayer\";\nimport GeometryDebug from \"./GeometryDebug\";\nimport OBBHelper from \"./OBBHelper\";\nvar bboxMesh = new THREE.Mesh();\nexport default function create3dTilesDebugUI(datDebugTool, view, _3dTileslayer) {\n  var gui = GeometryDebug.createGeometryDebugUI(datDebugTool, view, _3dTileslayer);\n  var regionBoundingBoxParent = new THREE.Group();\n  view.scene.add(regionBoundingBoxParent); // add wireframe\n\n  GeometryDebug.addWireFrameCheckbox(gui, view, _3dTileslayer); // Bounding box control\n\n  var obb_layer_id = \"\".concat(_3dTileslayer.id, \"_obb_debug\");\n  var obbLayer = new GeometryLayer(obb_layer_id, new THREE.Object3D(), {\n    update: function (context, layer, node) {\n      var enabled = context.camera.camera3D.layers.test({\n        mask: 1 << layer.threejsLayer\n      });\n\n      if (!enabled) {\n        return;\n      }\n\n      var metadata = node.userData.metadata;\n      var helper = node.userData.obb;\n\n      if (node.visible && metadata.boundingVolume) {\n        if (!helper) {\n          // 3dtiles with region\n          if (metadata.boundingVolume.region) {\n            helper = new OBBHelper(metadata.boundingVolume.region, \"id:\".concat(node.id));\n            regionBoundingBoxParent.add(helper);\n            helper.updateMatrixWorld(true); // 3dtiles with box\n          } else if (metadata.boundingVolume.box) {\n            bboxMesh.geometry.boundingBox = metadata.boundingVolume.box;\n            helper = new THREE.BoxHelper(bboxMesh);\n            helper.material.linewidth = 2; // 3dtiles with Sphere\n          } else if (metadata.boundingVolume.sphere) {\n            var geometry = new THREE.SphereGeometry(metadata.boundingVolume.sphere.radius, 32, 32);\n            var material = new THREE.MeshBasicMaterial({\n              wireframe: true\n            });\n            helper = new THREE.Mesh(geometry, material);\n            helper.position.copy(metadata.boundingVolume.sphere.center);\n          }\n\n          if (helper) {\n            helper.layer = layer; // add the ability to hide all the debug obj for one layer at once\n\n            var l3js = layer.threejsLayer;\n            helper.layers.set(l3js);\n\n            if (helper.children.length) {\n              helper.children[0].layers.set(l3js);\n            }\n\n            node.userData.obb = helper;\n            helper.updateMatrixWorld();\n          }\n\n          if (helper && !metadata.boundingVolume.region) {\n            // compensate B3dm orientation correction\n            var gltfUpAxis = _3dTileslayer.tileset.asset.gltfUpAxis;\n\n            if (gltfUpAxis === undefined || gltfUpAxis === 'Y') {\n              helper.rotation.x = -Math.PI * 0.5;\n            } else if (gltfUpAxis === 'X') {\n              helper.rotation.z = -Math.PI * 0.5;\n            } // Add helper to parent to apply the correct transformation\n\n\n            node.parent.add(helper);\n            helper.updateMatrix();\n            helper.updateMatrixWorld(true);\n          }\n        }\n\n        if (helper) {\n          helper.visible = true;\n\n          if (typeof helper.setMaterialVisibility === 'function') {\n            helper.setMaterialVisibility(true);\n          }\n        }\n      } else if (helper) {\n        helper.visible = false;\n\n        if (typeof helper.setMaterialVisibility === 'function') {\n          helper.setMaterialVisibility(false);\n        }\n      }\n    },\n    visible: false,\n    cacheLifeTime: Infinity,\n    source: false\n  });\n  View.prototype.addLayer.call(view, obbLayer, _3dTileslayer).then(function (l) {\n    gui.add(l, 'visible').name('Bounding boxes').onChange(function () {\n      view.notifyChange(view.camera.camera3D);\n    });\n  }); // The sse Threshold for each tile\n\n  gui.add(_3dTileslayer, 'sseThreshold', 0, 100).name('sseThreshold').onChange(function () {\n    view.notifyChange(view.camera.camera3D);\n  });\n}"],"names":["root","factory","exports","module","define","amd","self","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","call","ticking","rest","apply","_alignStartEnd","align","start","end","uid","id","isNullOrUndef","value","isArray","type","Object","toString","substr","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","indexOfDotOrLength","idx","resolveObjectKey","obj","pos","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","n","isNaN","x","y","epsilon","abs","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","A","B","C","D","E","F","c","f","hex","h1","h2","eq","v","lim","l","h","p2b","n2b","b2n","n2p","RGB_RE","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","r","g","calln","hsl2rgb","hue","map$1","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names$1","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","exec","rgbParse","p1","p2","hwb2rgb","hsv2rgb","hueParse","Color","constructor","ret","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","nameParse","this","_rgb","_valid","valid","rgbString","hexString","isShort","hslString","mix","color","weight","me","c1","c2","w2","w1","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","CanvasGradient","CanvasPattern","getHoverColor","overrides","descriptors","getScope$1","node","split","set","scope","values","defaults","_descriptors","animation","undefined","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","get","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","_scriptable","startsWith","_indexable","_fallback","_measureText","data","gc","longest","string","textWidth","measureText","width","push","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","forEach","_arrayUnique","items","Set","add","from","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","delete","_resolveScriptable","isIndexable","arr","filter","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","delta","iPixel","vPixel","monotoneCompute","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","positions","getPositionedStyle","styles","suffix","result","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","box","native","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","propertyFn","between","compare","normalize","normalizeSegment","count","_boundSegment","segment","bounds","startBound","endBound","getSegment","prevValue","inside","subStart","readStyle","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","styleChanged","prevStyle","animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","event","cb","reduce","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","to","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","animationOptions","colors","properties","numbers","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","last","grouped","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","getPixelForDecimal","tooltip","title","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","aspectRatio","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","animationsDisabled","pointCount","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_datasetIndex","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","DateAdapter","formats","timestamp","amount","unit","diff","startOf","weekday","endOf","members","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","optimizedEvaluateItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","evaluateAllVisibleItems","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","fullSize","setBoxDims","placeBoxes","userPadding","padding","placed","stackWeight","autoPadding","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","getMaximumSize","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","bbWidth","bbHeight","margins","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","isConnected","Element","tooltipPosition","hasValue","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","newTicks","majorStart","majorEnd","ceil","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","_toLeftRightCenter","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","ticksLimit","maxTicksLimit","_tickSize","maxScale","maxChart","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","_computeLabelArea","drawBackground","fillRect","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","unregister","registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","invalidatePlugins","clipArc","pixelMargin","angleMargin","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","version","ArcElement","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","inner","lineJoin","drawFullCircleBorders","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","_path","_points","_segments","_pointsUpdated","segments","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_computeSegments","interpolate","sub","_boundSegments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","boundingRects","addRectPath","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","rtlHelper","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","direction","original","getPropertyPriority","setProperty","prevTextDirection","overrideTextDirection","textDirection","restoreTextDirection","positionChanged","_positionChanged","_ignoreReplayEvents","handleEvent","CategoryScale","_startValue","_valueRange","_addedLabels","added","addedLabels","unshift","addIfString","lastIndexOf","findOrAddLabel","relativeLabelSize","minSpacing","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","generateTicks$1","LinearScale","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","getTextAlignForAngle","yForAngle","pathRadiusLine","labelCount","getPointPosition","RadialLinearScale","drawingArea","_pointLabels","_pointLabelItems","_padding","valueCount","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","plFont","textSize","setCenterPoint","extra","outerDistance","pointLabelPosition","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","gridLines","zeroLineColor","color_rose","color_blue","backgroundChartDiv","ThreeStatsChart","renderer","lastValidCompareIndex","textureDataset","pointRadius","geometryDataset","displayed","timeInS","lbl","memory","textures","geometries","OBBHelper","_THREE$Box3Helper","Derived","hasNativeReflectConstruct","_super","construct","sham","Boolean","valueOf","_isNativeReflectConstruct","Super","NewTarget","OBB","_this","random","box3D","getHex","obb","material","linewidth","frustumCulled","matrixAutoUpdate","rotationAutoUpdate","updateMatrixWorld","dispose","geometry","force","isEmpty","quaternion","copy","getCenter","applyQuaternion","getSize","multiplyScalar","updateMatrix","_createForOfIteratorHelper","allowArrayLike","it","iterator","minLen","_arrayLikeToArray","test","_unsupportedIterableToArray","done","_e","TypeError","err","normalCompletion","didErr","_e2","arr2","Debug","view","datDebugTool","chartDivContainer","createElement","cssText","appendChild","createChartContainer","mainLoop","gfxEngine","LatController","LongController","AltiController","eventFolder","tileLayer","initialPosition","Coordinates","referenceCrs","geoPosition","gui","addFolder","state","displayCharts","eventsDebug","debugCameraWindow","startChart","endChart","updateDuration","onChange","newValue","addFrameRequester","removeFrameRequester","updateChartDivSize","notifyChange","renderCameraDebug","frozen","controls","crs","cursorWorldPosition","getCameraTargetPosition","camera","camera3D","cameraTargetListener","getPickingPositionFromDepth","eventToViewCoords","setFromVector3","as","latitude","toFixed","longitude","altitude","updateDisplay","open","domElement","removeFolder","helper","CameraHelper","debugCamera","fov","updateProjectionMatrix","fogDistance","layerAtmosphere","getLayerById","fog","scene","displayedTilesObb","displayedTilesObbHelper","updateFogDistance","clearColor","lookAtCameraDebug","Vector3","aspect","coord","extent","setFromExtent","altitudeCameraDebug","toVector3","worldToLocal","localToWorld","lookAt","object3d","_step","_iterator","level0Nodes","traverseVisible","getClearColor","setViewport","setScissor","setScissorTest","setClearColor","_step2","_iterator2","chartId","div","chartCanvas","_step3","_iterator3","getElementsByTagName","_step4","_iterator4","_div","initTools","layer","datUi","debugUI","dbgStickyNode","dbgDisplaySticky","dbgDisplayChildren","dbgDisplayParents","styleUI","picking","bboxes","displayedCount","stickies","group","children","pts","name1","name2","owner","boxHelper","attributes","TileObjectsChart","viewLevelStartDataset","viewUpdateDurationDataset","nbObjectsChart","_latestUpdateStartingLevel","TileVisibilityChart","nbVisibleLabels","nbVisibleData","nbDisplayedData","nbVisibleChart","stats","level","countVisible","addMaterialLayerProperty","defineLayerProperty","traverse","content","addWireFrameCheckbox","addMaterialSize","begin","addMaterialLineWidth","createGeometryDebugUI","applyToNodeFirstMaterial","selectedNode","selectTileAt","mouseOrEvt","showInfo","overlayAlpha","showOutline","picked","pickObjectsAt","createTileDebugUI","debugInstance","isDebugMode","GeometryDebug","objectChardId","canvasObjectChardId","visibleChardId","canvasVisibleChardId","wireframe","objectChart","visibilityChart","sseHelper","obb_layer_id","sb_layer_id","geometrySphere","obbLayer","GeometryLayer","debugIdUpdate","cacheLifeTime","View","sbLayer","viewerDiv","circle","className","actualNode","centerNode","animationFrameRequester","removeAnimationRequester","_frameRequesters","currKey","which","mask","threejsLayer","l3js","boundingSphere","hiddenHandler","ObjectRemovalHelper","selectNode","applyMatrix4","matrixWorld","project","coords","normalizedToViewCoords","screenSize","actualSize","onUpdate","innerHTML","bboxMesh","create3dTilesDebugUI","_3dTileslayer","regionBoundingBoxParent","metadata","userData","boundingVolume","region","boundingBox","sphere","gltfUpAxis","tileset","asset","setMaterialVisibility"],"version":3,"file":"index.c6d2b88c.js.map","sourceRoot":"/__parcel_source_root/"}