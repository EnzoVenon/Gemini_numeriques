{"mappings":"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","sources":["src/main.js"],"sourcesContent":["// https://github.com/iTowns/itowns/blob/master/examples/source_stream_wfs_3d.html\n// Define crs projection that we will use (taken from https://epsg.io/3946, Proj4js section)\nitowns.proj4.defs('EPSG:3946', '+proj=lcc +lat_1=45.25 +lat_2=46.75 +lat_0=46 +lon_0=3 +x_0=1700000 +y_0=5200000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs');\n// # Simple Globe viewer\n\n// Define initial camera position\nvar positionOnGlobe = { longitude: 4.818, latitude: 45.7354, altitude: 3000 };\nvar placement = {\n    coord: new itowns.Coordinates('EPSG:4326', 4.818, 45.7354),\n    range: 3000,\n    tilt: 45,\n}\nvar meshes = [];\nvar linesBus = [];\nvar scaler;\n\n// `viewerDiv` will contain iTowns' rendering area (`<canvas>`)\nvar viewerDiv = document.getElementById('viewerDiv');\n\n// Instanciate iTowns GlobeView*\nvar view = new itowns.GlobeView(viewerDiv, placement);\nsetupLoadingScreen(viewerDiv, view);\n\n// Add one imagery layer to the scene\n// This layer is defined in a json file but it could be defined as a plain js\n// object. See Layer* for more info.\nitowns.Fetcher.json('./layers/JSONLayers/Ortho.json').then(function _(config) {\n    config.source = new itowns.WMTSSource(config.source);\n    var layer = new itowns.ColorLayer('Ortho', config);\n    view.addLayer(layer).then(menuGlobe.addLayerGUI.bind(menuGlobe));\n});\n\n// Add two elevation layers.\n// These will deform iTowns globe geometry to represent terrain elevation.\nfunction addElevationLayerFromConfig(config) {\n    config.source = new itowns.WMTSSource(config.source);\n    var layer = new itowns.ElevationLayer(config.id, config);\n    view.addLayer(layer).then(menuGlobe.addLayerGUI.bind(menuGlobe));\n}\nitowns.Fetcher.json('./layers/JSONLayers/WORLD_DTM.json').then(addElevationLayerFromConfig);\nitowns.Fetcher.json('./layers/JSONLayers/IGN_MNT_HIGHRES.json').then(addElevationLayerFromConfig);\n\nvar color = new itowns.THREE.Color();\nvar tile;\nfunction altitudeLine(properties, contour) {\n    var result;\n    var z = 0;\n    if (contour) {\n        result = itowns.DEMUtils.getTerrainObjectAt(view.tileLayer, contour, 0, tile);\n        if (!result) {\n            result = itowns.DEMUtils.getTerrainObjectAt(view.tileLayer, contour, 0);\n        }\n        tile = [result.tile];\n        if (result) {\n            z = result.coord.z;\n        }\n        return z + 5;\n    }\n}\n\nfunction colorLine(properties) {\n    return color.set(Math.round(Math.random() * 0xffffff));\n}\n\nfunction acceptFeatureBus(properties) {\n    if (properties.sens == 'Aller') {\n        var line = properties.ligne;\n        if (linesBus.indexOf(line) === -1) {\n            linesBus.push(line);\n            return true;\n        }\n    }\n    return false;\n}\n\nvar lyonTclBusSource = new itowns.WFSSource({\n    protocol: 'wfs',\n    url: 'https://download.data.grandlyon.com/wfs/rdata?',\n    version: '2.0.0',\n    typeName: 'tcl_sytral.tcllignebus',\n    crs: 'EPSG:3946',\n    extent: {\n        west: 1822174.60,\n        east: 1868247.07,\n        south: 5138876.75,\n        north: 5205890.19,\n    },\n    format: 'geojson',\n});\n\nvar lyonTclBusLayer = new itowns.FeatureGeometryLayer('WFS Bus lines', {\n    name: 'lyon_tcl_bus',\n    filter: acceptFeatureBus,\n    source: lyonTclBusSource,\n    zoom: { min: 9 },\n\n    style: new itowns.Style({\n        stroke: {\n            color: colorLine,\n            base_altitude: altitudeLine,\n            width: 5,\n        }\n    })\n});\nview.addLayer(lyonTclBusLayer);\n\nfunction colorBuildings(properties) {\n    if (properties.usage_1 === 'RÃ©sidentiel') {\n        return color.set(0xFDFDFF);\n    } else if (properties.usage_1 === 'Annexe') {\n        return color.set(0xC6C5B9);\n    } else if (properties.usage_1 === 'Commercial et services') {\n        return color.set(0x62929E);\n    } else if (properties.usage_1 === 'Religieux') {\n        return color.set(0x393D3F);\n    } else if (properties.usage_1 === 'Sportif') {\n        return color.set(0x546A7B);\n    }\n\n    return color.set(0x555555);\n}\n\nfunction altitudeBuildings(properties) {\n    return properties.altitude_minimale_sol;\n}\n\nfunction extrudeBuildings(properties) {\n    return properties.hauteur;\n}\n\nfunction acceptFeature(properties) {\n    return !!properties.hauteur;\n}\n\nscaler = function update(/* dt */) {\n    var i;\n    var mesh;\n    if (meshes.length) {\n        view.notifyChange(view.camera.camera3D, true);\n    }\n    for (i = 0; i < meshes.length; i++) {\n        mesh = meshes[i];\n        if (mesh) {\n            mesh.scale.z = Math.min(\n                1.0, mesh.scale.z + 0.1);\n            mesh.updateMatrixWorld(true);\n        }\n    }\n    meshes = meshes.filter(function filter(m) { return m.scale.z < 1; });\n};\n\nview.addFrameRequester(itowns.MAIN_LOOP_EVENTS.BEFORE_RENDER, scaler);\n\nvar wfsBuildingSource = new itowns.WFSSource({\n    url: 'https://wxs.ign.fr/topographie/geoportail/wfs?',\n    version: '2.0.0',\n    typeName: 'BDTOPO_V3:batiment',\n    crs: 'EPSG:4326',\n    ipr: 'IGN',\n    format: 'application/json',\n    extent: {\n        west: 4.568,\n        east: 5.18,\n        south: 45.437,\n        north: 46.03,\n    },\n});\n\nvar wfsBuildingLayer = new itowns.FeatureGeometryLayer('WFS Building', {\n    batchId: function (property, featureId) { return featureId; },\n    onMeshCreated: function scaleZ(mesh) {\n        mesh.children.forEach(c => {\n            c.scale.z = 0.01;\n            meshes.push(c);\n        })\n    },\n    filter: acceptFeature,\n    source: wfsBuildingSource,\n    zoom: { min: 14 },\n\n    style: new itowns.Style({\n        fill: {\n            color: colorBuildings,\n            base_altitude: altitudeBuildings,\n            extrusion_height: extrudeBuildings,\n        }\n    })\n});\nview.addLayer(wfsBuildingLayer);\n\nvar menuGlobe = new GuiTools('menuDiv', view);\n// Listen for globe full initialisation event\nview.addEventListener(itowns.GLOBE_VIEW_EVENTS.GLOBE_INITIALIZED, function () {\n    // eslint-disable-next-line no-console\n    console.info('Globe initialized');\n});\n\ndebug.createTileDebugUI(menuGlobe.gui, view);\n\nfunction picking(event) {\n    if (view.controls.isPaused) {\n        var htmlInfo = document.getElementById('info');\n        var intersects = view.pickObjectsAt(event, 3, 'WFS Building');\n        var properties;\n        var info;\n        var batchId;\n\n        htmlInfo.innerHTML = ' ';\n\n        if (intersects.length) {\n            batchId = intersects[0].object.geometry.attributes.batchId.array[intersects[0].face.a];\n            properties = intersects[0].object.feature.geometries[batchId].properties;\n\n            Object.keys(properties).map(function (objectKey) {\n                var value = properties[objectKey];\n                if (value) {\n                    var key = objectKey.toString();\n                    if (key[0] !== '_' && key !== 'geometry_name') {\n                        info = value.toString();\n                        htmlInfo.innerHTML += '<li><b>' + key + ': </b>' + info + '</li>';\n                    }\n                }\n            });\n        }\n    }\n}\n\nfor (var layer of view.getLayers()) {\n    if (layer.id === 'WFS Bus lines') {\n        layer.whenReady.then(function _(layer) {\n            var gui = debug.GeometryDebug.createGeometryDebugUI(menuGlobe.gui, view, layer);\n            debug.GeometryDebug.addMaterialLineWidth(gui, view, layer, 1, 10);\n        });\n    }\n    if (layer.id === 'WFS Building') {\n        layer.whenReady.then(function _(layer) {\n            var gui = debug.GeometryDebug.createGeometryDebugUI(menuGlobe.gui, view, layer);\n            debug.GeometryDebug.addWireFrameCheckbox(gui, view, layer);\n            window.addEventListener('mousemove', picking, false);\n        });\n    }\n    if (layer.id === 'WFS Route points') {\n        layer.whenReady.then(function _(layer) {\n            var gui = debug.GeometryDebug.createGeometryDebugUI(menuGlobe.gui, view, layer);\n            debug.GeometryDebug.addMaterialSize(gui, view, layer, 1, 200);\n        });\n    }\n}"],"names":["itowns","proj4","defs","$2b6e161c9edcf319$var$scaler","$2b6e161c9edcf319$var$placement","coord","Coordinates","range","tilt","$2b6e161c9edcf319$var$meshes","$2b6e161c9edcf319$var$linesBus","$2b6e161c9edcf319$var$viewerDiv","document","getElementById","$2b6e161c9edcf319$var$view","GlobeView","$2b6e161c9edcf319$var$addElevationLayerFromConfig","config","source","WMTSSource","layer","ElevationLayer","id","addLayer","then","$2b6e161c9edcf319$var$menuGlobe","addLayerGUI","bind","setupLoadingScreen","Fetcher","json","ColorLayer","$2b6e161c9edcf319$var$tile","$2b6e161c9edcf319$var$color","THREE","Color","$2b6e161c9edcf319$var$lyonTclBusSource","WFSSource","protocol","url","version","typeName","crs","extent","west","east","south","north","format","$2b6e161c9edcf319$var$lyonTclBusLayer","FeatureGeometryLayer","name","filter","properties","sens","line","ligne","indexOf","push","zoom","min","style","Style","stroke","color","set","Math","round","random","base_altitude","contour","result","z","DEMUtils","getTerrainObjectAt","tileLayer","tile","width","i","mesh","length","notifyChange","camera","camera3D","scale","updateMatrixWorld","m","addFrameRequester","MAIN_LOOP_EVENTS","BEFORE_RENDER","$2b6e161c9edcf319$var$wfsBuildingSource","ipr","$2b6e161c9edcf319$var$wfsBuildingLayer","batchId","property","featureId","onMeshCreated","children","forEach","c","hauteur","fill","usage_1","altitude_minimale_sol","extrusion_height","GuiTools","$2b6e161c9edcf319$var$picking","event","controls","isPaused","info","htmlInfo","intersects","pickObjectsAt","innerHTML","object","geometry","attributes","array","face","a","feature","geometries","Object","keys","map","objectKey","value","key","toString","$2b6e161c9edcf319$var$layer","addEventListener","GLOBE_VIEW_EVENTS","GLOBE_INITIALIZED","console","debug","createTileDebugUI","gui","getLayers","whenReady","GeometryDebug","createGeometryDebugUI","addMaterialLineWidth","addWireFrameCheckbox","window","addMaterialSize"],"version":3,"file":"index.a38dd4be.js.map"}