{"mappings":"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","sources":["src/models/building.js","src/main.js","src/models/wmts.js","src/models/elevation.js"],"sourcesContent":["\nexport function buildingLayer(serverURL, nameType, crs, zoomMinLayer, extent) {\n    let meshes = [];\n\n    // Source\n    const geometrySource = new itowns.WFSSource({\n        url: serverURL,\n        typeName: nameType,\n        crs: crs,\n        ipr: 'IGN',\n        format: 'application/json',\n        extent: extent\n    });\n\n    // Geometry Layer\n    const geomLayer = new itowns.FeatureGeometryLayer('Buildings', {\n        batchId: function (property, featureId) { return featureId; },\n        onMeshCreated: function scaleZ(mesh) {\n            mesh.children.forEach(c => {\n                c.scale.z = 0.01;\n                meshes.push(c);\n            })\n        },\n        filter: acceptFeature,\n        source: geometrySource,\n        zoom: { min: zoomMinLayer },\n        style: new itowns.Style({\n            fill: {\n                color: setColor,\n                base_altitude: setAltitude,\n                extrusion_height: setExtrusion,\n            },\n\n        }),\n\n    });\n\n    return geomLayer;\n}\n\n// Coloring the data\nfunction setColor(properties) {\n    let color = new itowns.THREE.Color(0xaaaaaa);\n    if (properties.usage_1 === 'Résidentiel') {\n        return color.set(0xFDFDFF);\n    } else if (properties.usage_1 === 'Annexe') {\n        return color.set(0xC6C5B9);\n    } else if (properties.usage_1 === 'Commercial et services') {\n        return color.set(0x62929E);\n    } else if (properties.usage_1 === 'Religieux') {\n        return color.set(0x393D3F);\n    } else if (properties.usage_1 === 'Sportif') {\n        return color.set(0x546A7B);\n    }\n\n    return color.set(0x555555);\n}\n\n// Extruding the data \nfunction setExtrusion(properties) {\n    return properties.hauteur;\n}\n\n// Placing the data on the ground\nfunction setAltitude(properties) {\n    return properties.altitude_minimale_sol;\n}\n\nfunction acceptFeature(properties) {\n    return !!properties.hauteur;\n}\n\n/* Properties example:\n    altitude_maximale_sol: 190.9\n     altitude_maximale_toit: 194\n    altitude_minimale_sol: 190.1\n    altitude_minimale_toit: 193.5\n    appariement_fichiers_fonciers: null\n    bbox: Array(4) [ 0.74671617, 45.1690315, 0.74672584, … ]\n    construction_legere: true\n    date_creation: \"2012-02-22T12:29:23.469Z\"\n    date_d_apparition: null\n    date_de_confirmation: null\n    date_modification: \"2022-05-12T23:19:01.410Z\"\n    etat_de_l_objet: \"En service\"\n    geojson: Object { id: \"batiment.BATIMENT0000000296089808\", geometry_name: \"geometrie\" }\n    hauteur: 3.4\n    identifiants_sources: \"\"\n    materiaux_de_la_toiture: null\n    materiaux_des_murs: null\n    methode_d_acquisition_altimetrique: \"Interpolation bâti BDTopo\"\n    methode_d_acquisition_planimetrique: \"BDParcellaire recalée\"\n    nature: \"Indifférenciée\"\n    nombre_d_etages: null\n    nombre_de_logements: null\n    origine_du_batiment: \"Cadastre\"\n    precision_altimetrique: 2.5\n    precision_planimetrique: 3\n    sources: null\n    style: Object { isStyle: true, order: 0, parent: {…}, … }\n    usage_1: \"Indifférencié\"\n    usage_2: null\n    <prototype>: Object { … }\n*/\n\n","// https://github.com/iTowns/itowns/blob/master/examples/source_stream_wfs_3d.html\n\n// ------------ Imports ------------ //\nimport { wmtsLayer } from \"./models/wmts\";\nimport { elevationLayer } from \"./models/elevation\";\nimport { buildingLayer } from \"./models/building\";\n\n// ------------ View ------------ //\nconst viewerDiv = document.getElementById('viewerDiv');\n\n// Perigueux extent\nconst extent = {\n    west: 0.67289,\n    east: 0.74665,\n    south: 45.17272,\n    north: 45.2135\n};\n\n// camera setup\nconst placement = {\n    coord: new itowns.Coordinates('EPSG:4326', 0.71829, 45.18260),\n    range: 3000,\n    tilt: 20\n};\n\nconst view = new itowns.GlobeView(viewerDiv, placement);\nsetupLoadingScreen(viewerDiv, view);\n\n// ------------ GUI ------------ //\nconst menuGlobe = new GuiTools('menuDiv', view);\n\n\n\n// ------------ Layers ------------ //\n// WMTS Layer\nconst wmts_layer = wmtsLayer('http://wxs.ign.fr/3ht7xcw6f7nciopo16etuqp2/geoportail/wmts',\n    'EPSG:3857',\n    'ORTHOIMAGERY.ORTHOPHOTOS',\n    'PM',\n    'image/jpeg');\n\nview.addLayer(wmts_layer).then(menuGlobe.addLayerGUI.bind(menuGlobe));\n\n// Elevation Layer\nconst elevation_layer = elevationLayer('http://wxs.ign.fr/3ht7xcw6f7nciopo16etuqp2/geoportail/wmts',\n    'EPSG:4326',\n    'ELEVATION.ELEVATIONGRIDCOVERAGE.HIGHRES',\n    'WGS84G',\n    'image/x-bil;bits=32');\n\nview.addLayer(elevation_layer).then(menuGlobe.addLayerGUI.bind(menuGlobe));\n\n// Geometry Layer\nconst geometry_layer = buildingLayer('https://wxs.ign.fr/topographie/geoportail/wfs?',\n    'BDTOPO_V3:batiment',\n    'EPSG:4326',\n    14,\n    extent,\n    view);\n\nview.addLayer(geometry_layer);\n\n\n\n// Listen for globe full initialisation event\nview.addEventListener(itowns.GLOBE_VIEW_EVENTS.GLOBE_INITIALIZED, function globeInitialized() {\n    // eslint-disable-next-line no-console\n    console.info('Globe initialized');\n\n});","\nexport function wmtsLayer(serverURL, crs, name, tileMatrixSet, format) {\n    // Source\n    const colorSource = new itowns.WMTSSource({\n        url: serverURL,\n        crs: crs,\n        name: name,\n        tileMatrixSet: tileMatrixSet,\n        format: format,\n    });\n\n    // Layer\n    const colorLayer = new itowns.ColorLayer('Ortho', {\n        source: colorSource,\n    });\n\n    return colorLayer;\n}","export function elevationLayer(serverURL, crs, name, tileMatrixSet, format) {\n    // Source\n    const elevationSource = new itowns.WMTSSource({\n        url: serverURL,\n        crs: crs,\n        name: name,\n        tileMatrixSet: tileMatrixSet,\n        format: format,\n        tileMatrixSetLimits: {\n            11: {\n                minTileRow: 442,\n                maxTileRow: 1267,\n                minTileCol: 1344,\n                maxTileCol: 2683\n            },\n            12: {\n                minTileRow: 885,\n                maxTileRow: 2343,\n                minTileCol: 3978,\n                maxTileCol: 5126\n            },\n            13: {\n                minTileRow: 1770,\n                maxTileRow: 4687,\n                minTileCol: 7957,\n                maxTileCol: 10253\n            },\n            14: {\n                minTileRow: 3540,\n                maxTileRow: 9375,\n                minTileCol: 15914,\n                maxTileCol: 20507\n            }\n        },\n    });\n\n    // Layer\n    const eleLayer = new itowns.ElevationLayer('MNT_WORLD', {\n        source: elevationSource,\n    });\n\n    return eleLayer;\n}"],"names":["$298c0b498438ffe5$var$setColor","properties","color","itowns","THREE","Color","usage_1","set","$298c0b498438ffe5$var$setExtrusion","hauteur","$298c0b498438ffe5$var$setAltitude","altitude_minimale_sol","$298c0b498438ffe5$var$acceptFeature","$2b6e161c9edcf319$var$viewerDiv","document","getElementById","$2b6e161c9edcf319$var$placement","coord","Coordinates","range","tilt","$2b6e161c9edcf319$var$view","GlobeView","setupLoadingScreen","$2b6e161c9edcf319$var$menuGlobe","GuiTools","$2b6e161c9edcf319$var$wmts_layer","serverURL","crs","name","tileMatrixSet","format","colorSource","WMTSSource","url","ColorLayer","source","addLayer","then","addLayerGUI","bind","$2b6e161c9edcf319$var$elevation_layer","elevationSource","tileMatrixSetLimits","minTileRow","maxTileRow","minTileCol","maxTileCol","ElevationLayer","$2b6e161c9edcf319$var$geometry_layer","nameType","zoomMinLayer","extent","meshes","geometrySource","WFSSource","typeName","ipr","FeatureGeometryLayer","batchId","property","featureId","onMeshCreated","mesh","children","forEach","c","scale","z","push","filter","zoom","min","style","Style","fill","base_altitude","extrusion_height","west","east","south","north","addEventListener","GLOBE_VIEW_EVENTS","GLOBE_INITIALIZED","console","info"],"version":3,"file":"index.8f2b6543.js.map"}